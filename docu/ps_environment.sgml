<refentry id="environment">
  <refmeta>
    <refentrytitle>ps_environment</refentrytitle>
    <manvolnum>7</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>ps_environment</refname>
    <refpurpose>&ps; environment variables</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      The behavior of the &ps; system when starting up parallel tasks or while
      submitting serial jobs using <xref linkend="psmstart"/> might be affected
      using different environment variables.
    </para>
    <para>
      Further variables may be used in order to modify the behavior of the
      logging facilities implementing a reliable forwarding of input and
      output.
    </para>
    <para>
      The last section describes some less frequently used environment
      variables which affect the behavior of the MPIch system implementing the
      MPI interface on top of &ps;.
    </para>
  </refsect1>

  <refsect1>
    <title>Variables managing the program startup</title>
    <para>
      The following environment variables are used during startup of parallel
      tasks or while distributing serial jobs throughout a cluster. Depending
      on their value a splitting of the cluster into virtual partitions is done
      and the load balancing strategy is controlled.
    </para>
    <variablelist>

      <varlistentry>
	<term><envar>PSI_EXCLUSIVE</envar></term>
	<listitem>
	  <para>
            Only unused nodes are considered for spawning new
            processes. In addition, the nodes chosen for the current
            job will be locked for further jobs, consequently no
            additional processes will be started on this nodes until
            the current job terminates.
	    (<envar>HOME</envar>, <envar>USER</envar>, <envar>SHELL</envar> and
	    <envar>TERM</envar>) are exported by default.
	  </para>
	  <para>
            This variable does not define, how many processes of a job
            will be placed per node. See also
            <envar>PSI_OVERBOOK</envar> and 
            <command>set maxproc</command> of 
            <citerefentry>
              <refentrytitle>psiadmin</refentrytitle>
              <manvolnum>8</manvolnum> 
            </citerefentry>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_EXPORTS</envar><replaceable> VAR</replaceable>
	  <optional>, <replaceable>VAR</replaceable></optional>...</term>
	<listitem>
	  <para>A list of environment variables which should be exported to
	    remote processes during spawning. Some environment variables
	    (<envar>HOME</envar>, <envar>USER</envar>, <envar>SHELL</envar> and
	    <envar>TERM</envar>) are exported by default.
	  </para>
	  <para>
	    Furthermore <envar>PWD</envar> is set correctly for remote
	    processes. In addition the environment used for partitioning the
	    cluster (i.e. <envar>PSI_NODES</envar>, <envar>PSI_HOSTFILE</envar>
	    or <envar>PSI_HOSTS</envar> and <envar>PSI_NODES_SORT</envar>) is
	    propagated to remote processes.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_NODES</envar><replaceable> number</replaceable>
	  <optional>, <replaceable>number</replaceable></optional>...</term>
	<listitem>
	  <para>Defines the nodes building the partition used to spawn new
	    processes to. Depending on the variable
	    <envar>PSI_NODES_SORT</envar> the ordering may be relevant. If the
	    number of processes to spawn exceed the number of nodes in the
	    partition, some nodes may get more than one process.
	  </para>
	  <para>
	    See also <envar>PSI_HOSTS</envar> and <envar>PSI_HOSTFILE</envar>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_HOSTS</envar><replaceable> hostname</replaceable>
	  <optional> <replaceable>hostname</replaceable></optional>...</term>
	<listitem>
	  <para>Space separated list of hostnames on which new processes should
	    be spawned on. Similar to <envar>PSI_NODES</envar>, but with
	    hostnames instead of logical ParaStation node numbers. If
	    <envar>PSI_NODES</envar> is set too, it is dominant over
	    <envar>PSI_HOSTS</envar>.
	  </para>
	  <para>
	    See also <envar>PSI_NODES</envar> and <envar>PSI_HOSTFILE</envar>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_HOSTFILE</envar>
	  <replaceable> filename</replaceable></term>
	<listitem>
	  <para>The name of a file containing a list of nodes' hostnames which
	    should be used for spawning. Similar to <envar>PSI_HOSTS</envar>
	    but the actual information is within the file instead of the
	    environment variable. If <envar>PSI_NODES</envar> or
	    <envar>PSI_HOSTS</envar> are set too, they are dominant over
	    <envar>PSI_HOSTFILE</envar>.
	  </para>
	  <para>
	    See also <envar>PSI_NODES</envar> and <envar>PSI_HOSTFILE</envar>.
	  </para>
	  <note>
	    <para><envar>PSI_NODES</envar>, <envar>PSI_HOSTS</envar> and
	      <envar>PSI_HOSTFILE</envar> are evaluated in the given order. If
	      more than one of the discussed variables is set, only the first
	      one will be used in order to create the partition. The latter
	      ones will be silently ignored.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_NODES_SORT</envar>
	  <replaceable> mode</replaceable></term>
	<listitem>
<!-- fg:
	  <para>This variable steers the sorting criterion which is used to
	    bring the nodes building a partition in an appropriate order. This
	    order will be used to spawn remote processes. The following values
	    of <replaceable>mode</replaceable> are recognized:
	  </para>
-->
	  <para>This variable defines the sorting criterion used to
	    reorder the nodes building a virtual partition. This
	    order will be used to spawn remote processes. The following values
	    of <replaceable>mode</replaceable> are recognized:
	  </para>
	  <variablelist>
	    <varlistentry>
	      <term><envar>ROUNDROBIN</envar></term>
	      <listitem>
		<para>No sorting of nodes before a spawn request. The nodes are
		  used in round robin fashion as they are set in
		  <envar>PSI_NODES</envar>, <envar>PSI_HOSTS</envar> or
		  <envar>PSI_HOSTFILE</envar>.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>NONE</envar></term>
	      <listitem>
		<para>Same as <envar>ROUNDROBIN</envar></para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>LOAD</envar></term>
	      <listitem>
		<para>The nodes are sorted by load before new processes are
		  spawned. Therefore nodes with the least load are used first.
		</para>
		<para>
		  To be more specific, the load average over the last minute is
		  used as the sorting criterion, i.e. this option is equivalent
		  to <envar>LOAD_1</envar>.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>LOAD_1</envar></term>
	      <listitem>
		<para>The nodes are sorted corresponding to the 1 minute load
		  average.</para>
		<para>
		  This option is equivalent to <envar>LOAD</envar>.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>LOAD_5</envar></term>
	      <listitem>
		<para>The nodes are sorted corresponding to the 5 minute load
		  average.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>LOAD_15</envar></term>
	      <listitem>
		<para>The nodes are sorted corresponding to the 15 minute load
		  average.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>PROC+LOAD</envar></term>
	      <listitem>
		<para>The nodes are sorted corresponding to the sum of the 1
		  minute load and the number of running &ps; processes. This
		  will lead to fair load-balancing even if processes are
		  started without notification to the &ps; management facility.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>PROC</envar></term>
	      <listitem>
		<para>The nodes are sorted by the number of running &ps;
		  processes before new processes are spawned. This is the
		  default behavior.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_OVERBOOK</envar></term>
	<listitem>
	  <para>
            If defined, more processes per node will be placed than
            CPUs available, if necessary. If undefined, only as many
            processes will be placed on a node as unused CPUs (=
            number(CPU) - number(currently running processes)) are available.
	  </para>
	  <para>
            See also
            <command>set maxproc</command> of 
            <citerefentry>
              <refentrytitle>psiadmin</refentrytitle>
              <manvolnum>8</manvolnum> 
            </citerefentry>, which takes precedence over
            <envar>PSI_OVERBOOK</envar>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_RARG_PRE_{n}</envar></term>
	<listitem>
	  <para>Preceding arguments for remote processes. For example: Use
	    <envar>PSI_RARG_PRE_0</envar>=/usr/bin/time to execute:
	    /usr/bin/time yourApplication yourArgs on the remote nodes.
	  </para>
	</listitem>
      </varlistentry>

    </variablelist>
  </refsect1>

  <refsect1>
    <title>Variables controlling the communication layer</title>
    <para>
      This variables controls the network card to use in order to actually do
      communication operations and protocols and interconnects not to
      use for data transfers.
    </para>
    <variablelist>
      <varlistentry>
	<term><envar>PSP_NETWORK</envar><replaceable> network</replaceable>
	  <optional>, <replaceable>network</replaceable></optional>
	</term>
	<listitem>
	  <para>A comma or space separated list of networks enabled to do
	    optimized &ps; communication. Each
	    <replaceable>network</replaceable> is a resolvable hostname in the
	    choosen network, the IP address of a host in this network or the IP
	    address of this network. The corresponding network has to be bound
	    to a <xref linkend="NIC"/> of the current node.
	  </para>
	  <para>
	    If <envar>PSP_NETWORK</envar> is set, each
	    <replaceable>network</replaceable> should be bound to a distinct
	    <xref linkend="NIC"/>. This card then is used in order to do
	    communication operations. If more than one
	    <replaceable>network</replaceable> is given, the first one found to
	    be bound to a local <xref linkend="NIC"/> is used.
	  </para>
	  <para>
	    If <envar>PSP_NETWORK</envar> is not set, &ps; uses the <xref
	      linkend="NIC"/> bound to the IP address, the local hostname
	    resolves to.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSP_P4SOCK</envar></term>
	<listitem>
	  <para>
            If set to 0, the &ps4; protocol
            <emphasis>p4sock</emphasis> will <emphasis
            role="bold">not</emphasis> be used for application data
            transfer.
	  </para>
	  <para>
            If undefined or set to a value &ne; 0,
            <emphasis>p4sock</emphasis> will be used for data
            transfer, if both nodes are configured to support this
            protocol.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSP_SHAREDMEM</envar></term>
	<listitem>
	  <para>
            If set to 0, shared memory will <emphasis
            role="bold">not</emphasis> be used for application data
            transfer.
	  </para>
	  <para>
            If undefined or set to a value &ne; 0, shared memory
            will be used for data transfer, if both processes are
            spawned on the same node.
	  </para>
	</listitem>
      </varlistentry>

    </variablelist>
  </refsect1>

  <refsect1> 
    <title>Variables controlling the logger/forwarder</title>
    <para>
      In order to modify the behavior of the logger and the forwarders
      controlling the remotely spawned processes, the following environment
      variable can be used:
    </para>
    <variablelist>
      <varlistentry>
	<term><envar>PSI_INPUTDEST</envar>
	  <replaceable> rank</replaceable></term>
	<listitem>
	  <para>If set, psilogger will forward all input to the process with
	    the corresponding rank within the process group. The default is to
	    give all available input to process 0.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_RUSAGE</envar></term>
	<listitem>
	  <para>If set, psilogger will print a message about the user
	    and system time consumed by each process of the parallel
	    task upon exit of this process.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_SOURCEPRINTF</envar></term>
	<listitem>
	  <para>If set, psilogger gives information about the source of the
	    received output, i.e. it will prepend every output by
	    <quote>[id]:</quote>, where id is the rank of the printing process
	    within the process group. Usually the id coincides with the
	    MPI-rank.  If <envar>PSI_LOGGERDEBUG</envar> is also set, every
	    output is prepended by <quote>[id, len]</quote>, where id is the
	    rank again and len is the length of the printed message in bytes. 
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_NOMSGLOGGERDONE</envar></term>
	<listitem>
	  <para>If set, psilogger will <emphasis role="bold">not</emphasis>
	    print out the message <quote>PSIlogger: done</quote> at the end of
	    a parallel run.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_LOGGERDEBUG</envar></term>
	<listitem>
	  <para>If set, psilogger gives debug output about connecting and
	    detaching clients as well as received output from the clients.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>PSI_FORWARDERDEBUG</envar></term>
	<listitem>
	  <para>If set, debug output of the psiforwarder about connected
	    programs, received input and received output is printed.
	  </para>
	</listitem>
      </varlistentry>

    </variablelist>
  </refsect1>

  <refsect1>
    <title>Variables controlling MPIch</title>

    <para>
      The environment variables within this section might be used less
      frequently. They are mainly listed within this document for completeness.
    </para>

    <variablelist>
      <varlistentry>
	<term><envar>MPID_PSP_MAXSMALLMSG</envar></term>
	<listitem>
	  <para>Length (in bytes) of the largest message sent without
	    rendezvous.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>MPID_PSP_START</envar></term>
	<listitem>
	  <para>Define the method used in order to spawn remote processes. The
	    possible values are:
	  </para>
	  <variablelist>
	    <varlistentry>
	      <term><envar>PSID</envar></term>
	      <listitem>
		<para>Start remote processes with the &ps; start
		  mechanism.</para>
		<para>This is the default. If <envar>MPID_PSP_START</envar> is
		  not set at all, &ps; is used in order to spawn remote
		  processes.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>SSH</envar></term>
	      <listitem>
		<para>Start remote processes with <citerefentry>
		    <refentrytitle>ssh</refentrytitle>
		    <manvolnum>1</manvolnum>
		  </citerefentry>. <envar>MPID_PSP_HOSTS</envar> must be
		  set.</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term><envar>NONE</envar></term>
	      <listitem>
		<para>Do not start any remote process. The remote processes
		  must be started manually. A commandline template is printed
		  to stdout.</para>
		<para>
		  This start mode is for debugging purposes only and should not
		  be used by the end-user.
		</para>
	      </listitem>
	    </varlistentry>
	  </variablelist>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><envar>MPID_PSP_HOSTS</envar><replaceable> hostname</replaceable>
	  <optional>, <replaceable>hostname</replaceable></optional>...</term>
	<listitem>
	  <para>Comma separated list of hostnames. Used for
	    <envar>MPID_PSP_START=<replaceable>SSH</replaceable></envar>
	    only.</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="spawning"/>
    </para>
  </refsect1>

</refentry>
  <!-- Keep this comment at the end of the file
  Local variables:
  mode: xml
  sgml-omittag:nil
  sgml-shorttag:nil
  sgml-namecase-general:nil
  sgml-general-insert-case:lower
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("userguide.xml" "book" "reference" "reference" ("title"))
  sgml-exposed-tags:nil
  sgml-local-catalogs:nil
  sgml-local-ecat-files:nil
  End:
  -->

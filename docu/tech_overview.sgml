<chapter id="Technical_overview">
  <title>Technical overview</title>

  <para>
    Within this section, a brief technical overview of &ps4; will be
    given. The various software modules constituting &ps4; are
    explained.
  </para>
  <section>
    <title>Runtime daemon</title>
    <para>
      In order to enable &ps4; on a cluster, the &ps; daemon 
      <citerefentry>
        <refentrytitle>psid</refentrytitle>
        <manvolnum>8</manvolnum>
      </citerefentry>
      has to be installed on each cluster node. This
      daemon process implements various functionalities:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Install and configure local communication devices and
          protocols, eg. load the <emphasis>p4sock</emphasis> kernel
          module and set up proper routing informations.
        </para>
      </listitem>
      <listitem>
        <para>
          Queue parallel and serial tasks until requested resources are
          available.
        </para>
      </listitem>
      <listitem>
        <para>
          Distribute processes onto the available cluster nodes.
        </para>
      </listitem>
      <listitem>
        <para>
          Startup and monitor processes on cluster nodes. Also terminate
          and cleanup processes upon request.
        </para>
      </listitem>
      <listitem>
        <para>
          Monitor availability of other cluster nodes, send <quote>i'm
          alive</quote> messages.
        </para>
      </listitem>
      <listitem>
        <para>
          Handle input/output and signal forwarding.
        </para>
      </listitem>
      <listitem>
        <para>
          Service management commands from the administration tools.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      The daemon processes periodically send information containing
      application processes, system load and others to all other nodes
      within the cluster.  So each daemon is able to monitor each other
      node, and in case of absent alive messages, it will initiate
      proper actions, eg.  terminate a parallel tast or mark this node as "no
      longer available". Also, if a previously unavailable node is now
      responding, it will be marked as "available" and will be used for
      upcoming parallel tast. No intervention of the system
      administrator is required.
    </para>
  </section>

  <section>
    <title>License daemon</title>
    <para>
      Up to version 4.0.6, a &ps; license daemon  has to run on one of
      the cluster nodes, typically the front-end node.  This daemon will
      validate the installed license, and will send
      the license information periodically to all cluster nodes.
      Beginning with version 4.1 of &ps4;, checking license information
      is done by the 
      <citerefentry>
        <refentrytitle>psid</refentrytitle>
        <manvolnum>8</manvolnum>
      </citerefentry>. Licenses are
      validated by expiration time, number of nodes and number of CPUs.
    </para>
<!--
    <sidebar><title>Please note:</title>
      <para>
        Changed with Version 4.1.
      </para>
    </sidebar>
-->
  </section>

  <section>
    <title>Libraries</title>
    <para>
      In addition, a couple of libraries providing communication and
      management functionality, must be installed.  All libraries are
      provided as static versions, which will be linked to the
      application at compile time, or as
      shared (dynamic) versions, which are pre-linked at compile time
      and folded in at runtime.  There is
      also a set of management and test tools installed on the cluster.
    </para>
    <para>
      &ps4; comes with it's own version of MPI, based on MPIch. This MPI
      library provides standard MPIch compatible MPI functions. For
      communication purposes, it supports a couple of communication
      pathes in parallel, eg. &ps4; protocol
      <emphasis>p4sock</emphasis>, TCP, Shared Memory and Myrinet (GM)
      <footnote>
        <para>
          Installation and configuration of &ps; over GM is not
          covered within this document. Please contact
          <email>support@par-tec.com</email> for more informations.
        </para>
      </footnote>.
      Thus, &ps4; is able to spawn parallel parallel tasks across nodes
      connected by different communication networks. &ps; will also make
      use of redundant interconnects, if a failure is encountered during
      startup of a parallel task.
    </para>
    <para>
      There are different versions of the &ps; MPI library available,
      depending on the hardware architecture. For IA32, versions for
      GNU, Intel and Portland Group compilers are available. The
      libraries support all available languages and language options for
      the selected compiler, eg. Fortran, Fortran90, C or C++.  The
      different versions of the MPI library can be installed in
      parallel, thus it is possible to compile and run applications
      using different compilers at the same node.
    </para>
    <!-- fg: TODO: Standard-tools von MPIch beschreiben -->
  </section>


  <section>
    <title>Kernel modules</title>
    <para>
      Beside libraries enabling efficient communication and task
      management, &ps4; also provides a couple of kernel modules:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <filename>p4sock.o</filename>: this module implements the
          kernel based &ps4; communication protocol.
        </para>
      </listitem>
      <listitem>
        <para>
          <filename>e1000_glue.o</filename>,
          <filename>bcm5700_glue.o</filename>: this modules enable
          even more efficient communication to the network drivers
          coming with &ps4; (see below). 
        </para>
      </listitem>
      <listitem>
        <para>
          <filename>p4tcp.o</filename>: this module provides a feature
          called "TCP bypass". Thus, applications using
          standard TCP communication channels on top of Ethernet are
          able to use the optimized &ps4; protocol and are subject to
          improved performance. 
        </para>
        <para>
          No modifications of the application, even no relinking is
          necessary to use this feature.
        </para>
        <note>
          <para>
            This feature of &ps; is still experimental in version 4.1.1.
            For details, please contact
            <email>support@par-tec.com</email>.
          </para>
        </note>
      </listitem>
    </itemizedlist>
    <para>
      To enable the maximum performance on Gigabit Ethernet, &ps4; comes
      with his own set of network drivers. This drivers are based on
      standard device drivers for the corresponding NICs and especially
      tuned for best performance within a cluster environment. They will
      also support all standard communication and protocols. To enable
      best performance within an Ethernet-based cluster, this drivers
      should replace their counterparts currently configured within the
      kernel.
    </para>
    <para>
      &ps; currently comes with drivers for the Intel (e1000) and
      Broadcom (bcm5700) network interface controllers.
      <!-- fg: TODO: glue module!!! -->
    </para>
    <para>
      &ps; is also able to use all standard Ethernet network drivers
      configured into the Linux kernel. However, to get the best performance,
      the use of the provided drivers is recommended, if applicable.
    </para>
  </section>

</chapter>

<refentry id="parastation_conf">

  <refmeta>
    <refentrytitle>parastation.conf</refentrytitle>
    <manvolnum>5</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>parastation.conf</refname>
    <refpurpose>the ParaStation configuration file</refpurpose>
  </refnamediv>

  <refsect1><title>Description</title>
    <para>
      Upon execution, the ParaStation daemon <xref linkend="psid"/> and the
      ParaStation license daemon <xref linkend="psld"/> read their
      configuration information from a configuration file which, by default, is
      <filename>/etc/parastation.conf</filename>. There are various parameter
      that can be modified persistently within this configuration file.
    </para>
    <para>
      The main syntax of the configuration file is one parameter per line. Due
      to ease of use there are some parameters, e.g. <command>nodes</command>,
      that are implemented in an environment mode. This mode enables to set
      more than one parameter within a command. Environment mode parameters may
      last longer than one line.
    </para>
    <para>
      Comments are denoted by a "#" at the beginning of a line or a "#"
      followed by an withspace character (i.e. space or tab) somewhere in the
      middle of a line. Comments end at the end of a line.
    </para>
    <para>
      The parser used to analyze <filename>parastation.conf</filename> is
      <emphasis>not</emphasis> case sensitive. This means, that all keywords
      within the configuration file may be written in any combination of upper-
      and lowercase characters. Within this document a mixed upper-/lowercase
      notation is used to provide more readable keywords. The same notation is
      used in the configuration file template
      <filename>parastation.conf.tmpl</filename> contained in the distributed
      ParaStation system. The template file can be found in
      <filename>/opt/parastation/config</filename>.
    </para>
  </refsect1>

  <refsect1>
    <title>Parameters</title>
    <para>
      The different parameters are discussed in the order they should appear in
      within the configuration file. Dependencies between parameters --
      resulting in a defined order of parameters --  are marked explicitely.
    </para>
    <para>
      Some parameters may be modified using different keywords, e.g. both
      <command>InstallDir</command> and <command>InstallationDir</command>
      modify the directory where the ParaStation daemon <xref
	linkend="psid"/> expects the ParaStation system installed. In case of
      different keywords modifying the same resource, all keywords are
      mentioned in front of the parameter's discussion.
    </para>
    <para>
      Very few parameters have to be declared in any case to enable ParaStation
      to run on a cluster. These parameters are <command>NrOfNodes</command>,
      <command>HWType</command>, <command>Nodes</command> and
      <command>LicenseServer</command>. In the case of a MyriNet cluster
      <command>MyriNetModule</command> and <command>Routingfile</command> have
      also to be declared.
    </para>
    <para>
      If parameters are declared more than once, the latest declaration is the
      one to use. Do not make use of this behavior as a feature since it may
      create great pitfalls.
    </para>
    <variablelist>
      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>InstallDir</command>
	    <arg choice="plain"><replaceable>inst-dir</replaceable></arg>
	    <command>, InstallationDir</command>
	    <arg choice="plain"><replaceable>inst-dir</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Tell the ParaStation daemon to find all the ParaStation stuff in
	    <filename><replaceable>inst-dir</replaceable></filename>. The
	    default is <filename>/opt/parastation</filename>.
	  </para>
	  <note>
	    <para>
	      The installation directory has to be declare before any of
	      <command>LicenseFile</command>, <command>MyriNetModule</command>,
	      <command>RoutingFile</command> or <command>IPModule</command> is
	      used.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>NrOfNodes</command>
	    <arg choice="plain"><replaceable>num</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Define the number of connected nodes including the frontend node.
	    Nodes will be numbered 0 &hellip;
	    <parameter><replaceable>num</replaceable></parameter>-1.
	  </para>
	  <note>
	    <para>
	      There is no default value for <command>NrOfNodes</command>.
	      <command>NrOfNodes</command> has to be declare within the
	      configuration file in any case.
	    </para>
	    <para>
	      The number of connected nodes has to be declared before any
	      <command>Nodes</command>.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>HWType</command>
	    <group choice="req">
	      <arg choice="plain">EtherNet</arg>
	      <arg choice="plain">MyriNet</arg>
<!-- 	      <arg choice="plain">GigaEtherNet</arg> -->
	      <arg choice="plain">None</arg>
	    </group>
	    <command>, HWType {</command>
	    <group rep="repeat" choice="req">
	      <arg choice="plain">EtherNet</arg>
	      <arg choice="plain">MyriNet</arg>
<!-- 	      <arg choice="plain">GigaEtherNet</arg> -->
	      <arg choice="plain">None</arg>
	    </group>
	    <command>}</command>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Define the default communication hardware available on the nodes of
	    the ParaStation cluster. This may be overruled by an explicit
	    <option>HWType</option> option in a <command>Node</command>
	    statement.
	  </para>
	  <para>
	    Available hardware types are:
	  </para>
	  <variablelist>

	    <varlistentry>
	      <term>
		<cmdsynopsis>
		  <command>EtherNet</command>
		</cmdsynopsis>
	      </term>
	      <listitem>
		<para>
		  Use classical TCP/IP communication over ethernet via an
		  optimized MPI implementation.
		</para>
		<para>
		  This is only available within ParaStation FE.
		</para>
	      </listitem>
	    </varlistentry>

	    <varlistentry>
	      <term>
		<cmdsynopsis>
		  <command>MyriNet</command>
		</cmdsynopsis>
	      </term>
	      <listitem>
		<para>
		  Use optimized communication over MyriNet.
		</para>
		<para>
		  This is only available within ParaStation 3.
		</para>
	      </listitem>
	    </varlistentry>

<!-- 	    <varlistentry> -->
<!-- 	      <term> -->
<!-- 		<cmdsynopsis> -->
<!-- 		  <command>GigaEtherNet</command> -->
<!-- 		</cmdsynopsis> -->
<!-- 	      </term> -->
<!-- 	      <listitem> -->
<!-- 		<para> -->
<!-- 		  Use optimized communication via gigabit ethernet. -->
<!-- 		</para> -->
<!-- 		<para> -->
<!-- 		  This is only available within ParaStation 4. -->
<!-- 		</para> -->
<!-- 	      </listitem> -->
<!-- 	    </varlistentry> -->

	    <varlistentry>
	      <term>
		<cmdsynopsis>
		  <command>None</command>
		</cmdsynopsis>
	      </term>
	      <listitem>
		<para>
		  No communication hardware at all.
		</para>
	      </listitem>
	    </varlistentry>

	  </variablelist>
	  <para>
	    It is possible to enable more than one hardware type, either as
	    default or on a per node basis. Think of a node that has both, a
	    MyriNet and a fast ethernet card. Furthermore the cluster contains
	    nodes that lack MyriNet. Then it might be useful to run jobs only
	    depending on ethernet communication even on nodes that have a
	    MyriNet card in order to talk to nodes that don't have one. The
	    corresponding <command>HWType</command> declaration read
	    <command>HWType {<parameter>MyriNet</parameter>
	      <parameter>EtherNet</parameter> }</command>.
	  </para>
	  <para>
	    The default value of <command>HWType</command> is
	    <parameter>None</parameter>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>hasIP</command>
	    &boolargs;
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    If the argument is one of <parameter>yes</parameter>,
	    <parameter>true</parameter> or <parameter>1</parameter> all nodes
	    declared within a <command>Node</command> statement will load the
	    ParaStation IP module to enable TCP/IP over MyriNet, unless
	    otherwise stated within a <command>Node</command> statement.
	  </para>
	  <para>
	    If the argument is one of <parameter>no</parameter>,
	    <parameter>false</parameter> or <parameter>0</parameter> TCP/IP
	    over MyriNet will not be enabled, unless otherwise stated.
	  </para>
	  <para>
	    The default is to disable TCP/IP over MyriNet.
	  </para>
	  <note>
	    <para>This parameter is only useful when configuring a MyriNet
	      cluster.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>starter</command>
	    &boolargs;
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    If the argument is one of <parameter>yes</parameter>,
	    <parameter>true</parameter> or <parameter>1</parameter> all nodes
	    declared within a <command>Node</command> statement will allow to
	    start parallel jobs, unless otherwise stated.
	  </para>
	  <para>
	    If the argument is one of <parameter>no</parameter>,
	    <parameter>false</parameter> or <parameter>0</parameter> starting
	    is not allowed, unless otherwise stated.
	  </para>
	  <para>
	    The default is to allow starting parallel jobs from all nodes.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>Node[s]</command>
	    <arg choice="plain"><replaceable>hostname</replaceable></arg>
	    <arg choice="plain"><replaceable>id</replaceable></arg>
	    <arg>HWtype-entry</arg>
	    <arg>hasIP-entry</arg>
	    <arg>starter-entry</arg>
	    
	    <command>, Node[s] {</command>
	    <arg choice="plain">{<replaceable>hostname</replaceable></arg>
	    <arg choice="plain"><replaceable>id</replaceable></arg>
	    <arg choice="opt">HWtype-entry</arg>
	    <arg>hasIP-entry</arg>
	    <arg>starter-entry</arg>
	    <arg choice="plain">}...</arg>
	    <command>}</command>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Define one or more nodes to be part of the ParaStation cluster.
	  </para>
	  <para>
	    This is the first example of a parameter that supports the
	    environment mode. This means there are two different notations to
	    use this parameter. The first one may be used to define a single
	    node, the second one will allow to register more than one node
	    within a single command. You can assume the environment form of a
	    command as a convenience mode that prevents from typing the keyword
	    once per entry again and again.
	  </para>
	  <para>
	    Each entry has to have at least to items, the
	    <parameter><replaceable>hostname</replaceable></parameter> and the
	    <parameter><replaceable>id</replaceable></parameter>. This will
	    tell the ParaStation system that the node called
	    <parameter><replaceable>hostname</replaceable></parameter> will act
	    as the physical node with ParaStation ID
	    <parameter><replaceable>id</replaceable></parameter>.
	  </para>
	  <para>
	    Further entry may overrule the default values of the hardware type
	    on the node, the existence of the IP over Myrinet feature and the
	    ability to start parallel jobs from this node. These entry have the
	    same syntax as the stand alone commands to set the corresponding
	    default value.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>LicenseServer</command>
	    <arg choice="plain"><replaceable>hostname</replaceable></arg>
	    <command>, LicServer</command>
	    <arg choice="plain"><replaceable>hostname</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Tell ParaStation to use
	    <parameter><replaceable>hostname</replaceable></parameter> as the
	    machine where the ParaStation license daemon <xref
	      linkend="psld"/> should run.
	  </para>
	  <para>
	    ParaStation will try to start the license server on this machine if
	    the license ping is missing for too long. Therefor, the
	    <citerefentry>
	      <refentrytitle>inetd</refentrytitle>
	      <manvolnum>8</manvolnum>
	    </citerefentry> has to be set up correctly on this node to enable
	    autostarting the <xref linkend="psld"/>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>LicenseFile</command>
	    <arg choice="plain"><replaceable>lic-file</replaceable></arg>
	    <command>, LicFile</command>
	    <arg choice="plain"><replaceable>lic-file</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Tell the ParaStation daemon <xref linkend="psid"/> and the license
	    daemon <xref linkend="psld"/> to use
	    <filename><replaceable>lic-file</replaceable></filename> as the
	    license file.
	  </para>
	  <para>
	    Be aware of the fact that both, <xref linkend="psid"/> and <xref
	      linkend="psld"/>, need a correct license file.
	  </para>
	  <para>
	    <filename><replaceable>lic-file</replaceable></filename> may be a
	    absolute or relative path. Relative paths are looked up relative to
	    <filename><replaceable>InstallDir</replaceable>/config</filename>
	    and <filename><replaceable>InstallDir</replaceable></filename> in
	    this order. Furthermore the directory where the config-file resides
	    (which is <filename>/etc</filename> by default, but may be
	    overwritten with
	    <xref linkend="psid"/>'s and <xref linkend="psld"/>'s
	    <option>-f</option>  option) is investigated.
	  </para>
	  <para>
	    The default is <filename>license</filename>.
	  </para>
	  <note>
	    <para>
	      If <filename><replaceable>lic-file</replaceable></filename> is
	      a relative path, <command>InstallDir</command> has to be declared
	      beforehand, unless it is the default.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>LicenseDeadInterval</command>
	    <arg choice="plain"><replaceable>num</replaceable></arg>
	    <command>, LicDeadInterval</command>
	    <arg choice="plain"><replaceable>num</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    The ParaStation license daemon <xref linkend="psld"/> will shut
	    down operation after
	    <parameter><replaceable>num</replaceable></parameter> multicast
	    periods, if no multicast ping was received from any configured
	    ParaStation daemon.
	  </para>
	  <para>
	    The default value is 30.
	  </para>
	  <para>
	    For now, the multicast period is set to two second, i.e. every
	    daemon sends a multicast ping every two seconds. This results into
	    shutting down the license daemon 1 minute after the last
	    ParaStation daemon withing the cluster has finished execution.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>MyriNetModule</command>
	    <arg choice="plain"><replaceable>mod-file</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Tell the ParaStation daemon <xref linkend="psid"/> to use
	    <filename><replaceable>mod-file</replaceable></filename> as the
	    MyriNet kernel module.
	  </para>
	  <para>
	    <filename><replaceable>mod-file</replaceable></filename> may be a
	    absolute or relative path. Relative paths are looked up relative to
	    <filename><replaceable>InstallDir</replaceable>/bin/module</filename> 
	    and <filename><replaceable>InstallDir</replaceable></filename> in
	    this order.
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	    <para>
	      There is no default value for <command>MyriNetModule</command>.
	      <command>MyriNetModule</command> has to be declare within the
	      configuration file in any case for a MyriNet cluster.
	    </para>
	    <para>
	      If <filename><replaceable>mod-file</replaceable></filename> is
	      a relative path, <command>InstallDir</command> has to be declared
	      beforehand, unless it is the default.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>RoutingFile</command>
	    <arg choice="plain"><replaceable>route-file</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Tell the ParaStation daemon <xref linkend="psid"/> to use
	    <filename><replaceable>route-file</replaceable></filename> as the
	    MyriNet routing file.
	  </para>
	  <para>
	    <filename><replaceable>route-file</replaceable></filename> may be
	    a absolute or relative path. Relative paths are looked up relative
	    to
	    <filename><replaceable>InstallDir</replaceable>/config</filename> 
	    and <filename><replaceable>InstallDir</replaceable></filename> in
	    this order.
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	    <para>
	      There is no default value for <command>RoutingFile</command>.
	      <command>RoutingFile</command> has to be declare within the
	      configuration file in any case for a MyriNet cluster.
	    </para>
	    <para>
	      If <filename><replaceable>route-file</replaceable></filename>
	      is a relative path, <command>InstallDir</command> has to be
	      declared beforehand, unless it is the default.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>SmallPacketSize</command>
	    <arg choice="plain"><replaceable>size</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Set the the maximum size of PIO packets to
	    <parameter><replaceable>size</replaceable></parameter> bytes.
	  </para>
	  <para>
	    PIO packets are send directly to the node's memory by the <link
	      linkend="MCP">MCP</link> and copied by a <citerefentry>
	      <refentrytitle>memcpy</refentrytitle>
	      <manvolnum>3</manvolnum>
		    </citerefentry> into the final destination. Non-PIO packets
	    are send via DMA immediately to their final destination.
	  </para>
	  <para>
	    The default value is 250 byte.
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	    <para>
	      This parameter can be set during runtime via the <command>set
		<option>smallpacketsize</option></command> directive within the
	      ParaStation administration and management tool <xref
		linkend="psiadmin"/>.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>ResendTimeout</command>
	    <arg choice="plain"><replaceable>time</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Set the retansmission timeout to
	    <parameter><replaceable>time</replaceable></parameter>
	    microseconds.
	  </para>
	  <para>
	    If a packet sent by ParaStation to another node is not acknowledged
	    for this period of time, it will be resend to this node.
	  </para>
	  <para>
	    The default value is 2048 microseconds.
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	    <para>
	      In the current version of ParaStation this parameter is fixed and
	      cannot be modified.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>HNPend</command>
	    <arg choice="plain"><replaceable>val</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Set the number of pending host notify messages to
	    <parameter><replaceable>val</replaceable></parameter>.
	  </para>
	  <para>
	    Host notify messages are send by the <link linkend="MCP">MCP</link>
	    to the kernel to mark send buffers as free. This is done when data,
	    that was sent successfully via this buffer, was acknowledged by the
	    destination node.
	  </para>
	  <para>
	    Usually not every freed buffer is communicated, but the <link
	      linkend="MCP">MCP</link> waits until several buffers are freed
	    and sends accumulated host notify messages then.
	    <parameter><replaceable>val</replaceable></parameter> is the number
	    of accumulated messages to sent simultaniously.
	  </para>
	  <para>
	    The default value is 2.
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	    <para>
	      <option>val</option> has to be choosen as 0 &lt;=
	      <option>val</option> &lt; 3. Small values lead to more traffic on
	      the PCI bus, but prevent free send buffers on the MyriNet card
	      from not being used. Values larger than 3 have empirically proven
	      to do a disservice.
	    </para>
	    <para>
	      This parameter can be set during runtime via the <command>set
		<option>hnpend</option></command> directive within the
	      ParaStation administration and management tool <xref
		linkend="psiadmin"/>.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>ACKPend</command>
	    <arg choice="plain"><replaceable>val</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Set the number of pending acknowledgements to
	    <parameter><replaceable>val</replaceable></parameter>.
	  </para>
	  <para>
	    ParaStation usually does not send acknowledgements immediately but
	    waits for some pending ACK messages and send them accumulated.
	  </para>
	  <para>
	    If a packet is not acknowledged for some microseconds (the actual
	    value can be set using the parameter
	    <command>ResendTimeout</command>) it will be resend by the source
	    node. If a packet is received twice by the destination node, a
	    immediate ACK message is sent and therefor correct delivery of
	    packets is ensured.
	  </para>
	  <para>
	    The default value is 1.
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	    <para>
	      <option>val</option> has to be choosen as 0 &lt;=
	      <option>val</option> &lt; 3. Small values lead to more ACK
	      messages, but prevent from to many resends. Values larger than 3
	      have empirically proven to do a disservice.
	    </para>
	    <para>
	      This parameter can be set during runtime via the <command>set
		<option>ackpend</option></command> directive within the
	      ParaStation administration and management tool <xref
		linkend="psiadmin"/>.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>IPModule</command>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>IPPrefix</command>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>IPPrefixLen</command>
	    <arg choice="plain"><replaceable>len</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	  </para>
	  <note>
	    <para>
	      This parameter is only useful when configuring a MyriNet cluster.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>SelectTime</command>
	    <arg choice="plain"><replaceable>time</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Set the timeout of the central <citerefentry>
	      <refentrytitle>select</refentrytitle>
	      <manvolnum>2</manvolnum>
	    </citerefentry> of the ParaStation daemon <xref linkend="psid"/> to
	    <parameter><replaceable>time</replaceable></parameter> seconds.
	  </para>
	  <para>
	    The default value is 2 seconds.
	  </para>
	  <note>
	    <para>
	      This parameter can be set during runtime via the <command>set
		<option>selecttime</option></command> directive within the
	      ParaStation administration and management tool <xref
		linkend="psiadmin"/>.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>DeadInterval</command>
	    <arg choice="plain"><replaceable>num</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    The ParaStation daemon <xref linkend="psid"/> will declare other
	    daemons as dead after
	    <parameter><replaceable>num</replaceable></parameter> consecutively
	    missing multicast pings.
	  </para>
	  <para>
	    After declaring a node as dead, all processes residing on this node
	    are also declared dead. This results in sending signals to all
	    processes on the local node that have requested to get informed
	    about the death of one of these processes.
	  </para>
	  <para>
	    The default value is 10.
	  </para>
	  <para>
	    For now, the multicast period is set to two second, i.e. every
	    daemon send a multicast ping every two seconds. This results in
	    declaring a daemon as dead after 20 seconds for the default value.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>LogLevel</command>
	    <arg choice="plain"><replaceable>num</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Set the debugging level of the ParaStation daemon
	    <xref linkend="psid"/> to <option>num</option>.
	  </para>
	  <note>
	    <para>
	      For values of <option>level</option> larger than
	      <constant>10</constant> the daemon logs a huge amount of message
	      in the logging destination, which is usually the
	      <citerefentry>
		<refentrytitle>syslog</refentrytitle>
		<manvolnum>3</manvolnum>
	      </citerefentry>. Don't use this levels different from
	      <constant>0</constant> for too long!
	    </para>
	    <para>
	      This parameter can be set during runtime via the <command>set
		<option>psiddebug</option></command> directive within the
	      ParaStation administration and management tool <xref
		linkend="psiadmin"/>.
	    </para>
	  </note>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>LogDest</command>
	    <command>, LogDestination</command>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>MCastGroup</command>
	    <arg choice="plain"><replaceable>group-num</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Tell <xref linkend="psid"/> and <xref linkend="psld"/> to use
	    multicast group port
	    <parameter><replaceable>group-num</replaceable></parameter> for
	    multicast communication to other daemons.
	  </para>
	  <para>
	    The default port to use is <constant>237</constant>
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>MCastPort</command>
	    <arg choice="plain"><replaceable>port-num</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Tell <xref linkend="psid"/> and <xref linkend="psld"/> to use UDP
	    port <parameter><replaceable>port-num</replaceable></parameter> for
	    multicast communication to other daemons.
	  </para>
	  <para>
	    The default port to use is <constant>1889</constant>
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>RDPPort</command>
	    <arg choice="plain"><replaceable>port-num</replaceable></arg>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	    Tell <xref linkend="psid"/> to use UDP port
	    <parameter><replaceable>port-num</replaceable></parameter> for RDP
	    communication to other daemons.
	  </para>
	  <para>
	    The default port to use is <constant>886</constant>
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>RLimit</command>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <para>
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <cmdsynopsis>
	    <command>Environment</command>
	  </cmdsynopsis>
	</term>
	<listitem>
	  <note>
	    <para>
	      NOT YET IMPLEMENTED !
	    </para>
	  </note>
	</listitem>
      </varlistentry>

    </variablelist>
  </refsect1>

  <refsect1>
    <title>Errors</title>
    <para>
      The commands <command>hasIP</command>, <command>IPModule</command>,
      <command>IPPrefix</command>, <command>IPPrefixLen</command> and
      <command>Environment</command> are not implemented yet.
    </para>
    <para>
      The commands <command>IPModule</command>,
      <command>IPPrefix</command>, <command>IPPrefixLen</command>,
      <command>LogDest</command>, <command>RLimit</command> and
      <command>Environment</command> are not documented yet.
    </para>
  </refsect1>
</refentry>
  <!-- Keep this comment at the end of the file
  Local variables:
  mode: xml
  sgml-omittag:nil
  sgml-shorttag:nil
  sgml-namecase-general:nil
  sgml-general-insert-case:lower
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("main.xml" "book" "reference" "reference" ("title"))
  sgml-exposed-tags:nil
  sgml-local-catalogs:nil
  sgml-local-ecat-files:nil
  End:
  -->

<chapter id="installation">
  <title>Installation</title>
  <para>
    Beforehand describing the installation of ParaStation, this chapter
    discusses the prerequisites to do so. There are specified three
    different ways to install ParaStation, discriminating against each
    other in the level of automatization of the installation process.
  </para>
  <para>
    Of course, the less automatized the choosen way of installation is, the
    more possibilities of costumization within the installation process occur.
    On the other hand even the most automatized way of installation, the
    installation via RPM, should give suitable result in most cases.
  </para>

  <section>
    <title>Prerequisites</title>
    <para>
      To install ParaStation on a cluster of workstation, few prerequisites
      have to be met.
    </para>

    <simplesect>
      <title>Hardware</title>
      <para>
	You need a homogenous cluster in the sense of processor architecture,
	i.e. you can mix Intel IA32 and AMD but not Intel IA32 and Alpha. The
	supported processor architecures up to now are Intel IA32 (including
	AMD Athlon) and Alpha.
      </para>
      <para>
	Furthermore of course the nodes need to be interconnected. Usually
	there is a connection via fast ethernet between the nodes. ParaStation
	needs this fast ethernet interconnect for management
	purposes. Furthermore there is the possibility to have an fast
	interconnect to do high bandwith, low latency communication. At the
	moment Myrinet is supported to do this kind of communication. There
	also exists a version supporting communication via fast
	ethernet. Naturally this version lacks of really high throughput and
	low latency due to the limited capabilities of the hardware.
      </para>
    </simplesect>

    <simplesect>
      <title>Multicast</title>
      <para>
	From the software side of view only few prerequisites have to be met.
	You need a Linux kernel supporting multicast on all nodes of the
	cluster. This is usually no problem if a standard kernel from a common
	distribution is used. You have to explicitly enable multicast support
	if you build you own kernel. To learn more about multicast take a look
	at the <ulink
	  url="http://jungla.dit.upm.es/~jmseyas/linux/mcast.howto/multic.html"> 
	  <citetitle>Multicast over TCP/IP HOWTO</citetitle></ulink>.
      </para>
      <para>
	Besides the kernel supporting multicast, the hardware has to support
	multicast, too. Since modern ethernet switches support multicast and
	the nodes of a cluster of workstation usually live in a private subnet
	there should be no problem about this. In the case of a gateway in
	between the nodes of a cluster this gateway has to be configured
	appropriately to allow multicast packets to reach all nodes of the
	cluster from all nodes.
      </para>
      <para>
	On nodes with more than one ethernet interface you have to setup a
	defaultroute for the multicast traffic. This is done by
      </para>
      <programlisting>
	route add -net 224.0.0.0 netmask 240.0.0.0 dev <replaceable>ethX</replaceable>
      </programlisting>
      <para>
	manually, where <replaceable>ethX</replaceable> has to be replaced by
	the name of the interface connecting to all other nodes. To enable this
	route at system-start, a corresponding entry has to be added to
	<filename>route.conf</filename> or
	<filename>/etc/sysconfig/networks/routes</filename> depending on the
	type of distribution used.
      </para>
      <para>
	Usually only the front-end machine of a cluster has two ethernet
	interfaces in use. Then you have to add the Multicast route to the
	interface connecting the front-end to all other nodes of the cluster.
      </para>
    </simplesect>

    <simplesect>
      <title>Kernel version</title>
      <para>
	Furthermore, since kernel modules are needed for the high bandwidth,
	low latency communication, you need a kernel version supported by the
	distributed modules. These modules support the standard kernels of
	common distributions, even if you have recompiled theses kernels in a
	slightly modified way. These modules are not needed for the
	communication via fast ethernet.
      </para>
      <para>
	If there is the need for special version of the modules it is possible
	to get them on demand.
      </para>
    </simplesect>
  </section>

  <section>
    <title>Centralized or distributed installation</title>
    <para>
      The most imported question to answer before starting the installation is
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  whether the ParaStation files should reside physically on one node
	  and will be mounted on all the other nodes using NFS,
	</para>
      </listitem>
      <listitem>
	<para>
	  or whether they should be stored identically in a distributed fashion
	  on every node.
	</para>
      </listitem>
    </itemizedlist>
    <para>
      Both ans&auml;tze have their pros and cons. On the one hand a centralized
      installation save from inconsistent versions of executables or
      configuration files within the cluster, but on the other hand it
      introduces a possible single point of failure, the NFS server. This
      disadvantage may be reasonable if a frontend machine acts as a NFS
      server, since all other nodes are unavailable anyhow, if the frontend
      fails. Furthermore, the <filename>/home</filename> directory is ususally
      stored centralized, too. Thus doing so with the ParaStation files
      (ideally on the same machine) will cause no further harm to the stability
      and availability of the cluster.
    </para>
    <para>
      ParaStation supports both methods of installation: It can either be
      installed on every node (residing per default in
      <filename>/opt/parastation</filename>) or it may be installed on a front
      end machine and mounted on everey node of the cluster (ideally also to
      <filename>/opt/parastation</filename>). Be aware of the fact that even if
      ParaStation is installed on the front end machine, some configuration
      work on each node has to be done anyway.
    </para>
    <para>
      Within the discussion of the different installation methods below both
      modi will be described, the <quote>distributed</quote> and the
      <quote>centralized</quote> one.
    </para>
    <para>
      From the authors point of view the benefits of the centralized
      installation outweigh its disadvantages and furthermore the advantages of
      the distributed installation. Thus putting ParaStation on a NFS server
      and mounting the directory on all the nodes is the method of choice.
    </para>
    <note>
      <para>
      Experience has shown that mounting ParaStation or even
	<filename>/home</filename> via NFS using <citerefentry>
	  <refentrytitle>automount</refentrytitle>
	  <manvolnum>8</manvolnum>
      </citerefentry> may cause major problems during startup of ParaStation or
	application startup. This is due to the fact that requests to the NFS
	server might timeout if many clients try to mount directories almost
	concurrently. On the other hand there is no real need using
      <citerefentry>
	  <refentrytitle>automount</refentrytitle>
	  <manvolnum>8</manvolnum>
      </citerefentry> in this case since the nodes of a cluster usually cannot
	be operated in a usable way without the user's
	<filename>/home</filename> directories.
      </para>
    </note>
    <section>
      <title>Directory structure</title>
      <para>
	The default location to install ParaStation is
	<filename>/opt/parastation</filename>. Underneath this directory,
	several subdirectories are created containing the actual ParaStation
	installation:
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    <filename>bin</filename>
	  </term>
	  <listitem>
	    <para>
	      contains all executables building the ParaStation system.
	      Remember to include this directory into the <envar>PATH</envar>
	      environment.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <filename>config</filename>
	  </term>
	  <listitem>
	    <para>
	      contains the installation script
	      <filename>PSM_INSTALL</filename>, the example configuration file
	      <filename>parastation.conf.tmpl</filename> and some example
	      routing files for the MyriNet driver.
	    </para>
	    <para>
	      Furthermore within the standard installation the configuration
	      file <filename>parastation.conf</filename> is physically located
	      here but through a symbolic link also available in
	      <filename>/etc</filename>.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <filename>doc</filename>
	  </term>
	  <listitem>
	    <para>
	      contains the ParaStation documentation after installing the
	      corresponding RPM or <filename>.tar.gz</filename> file.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <filename>include</filename>
	  </term>
	  <listitem>
	    <para>
	      contains the header files needed to build ParaStation
	      applications. This are primarily needed for building applications
	      using the low level PSPort or PSHAL libraries.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    <filename>lib</filename>
	  </term>
	  <listitem>
	    <para>
	      contains various libraries needed to build ParaStation
	      applications. This are primarily needed for building MPI
	      applications or such using the low level PSPort or PSHAL
	      libraries.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Installation via rpm</title>
    <para>
      The easiest way to install ParaStation is the installation via RPM. This
      is the preferred method on all <ulink
	url="http://www.suse.de">SuSE</ulink> or <ulink
	url="http://www.redhat.com">RedHat</ulink> based systems.
    </para>
    <simplesect>
      <title>Getting the ParaStation RPM</title>
      <para>
	A RPM containing ParaStation can be obtained from the <ulink
	  url="http://www.par-tec.com/downloads/download.html">download
	  section</ulink> of the <ulink url="http://www.par-tec.com">ParTec
	  homepage</ulink>. The file of the linux version is usually named
	<filename>psm-x.y.z-yyyymmdd.Linux.arch.rpm</filename>, where
	<filename>x.y.z</filename> is the version number,
	<filename>yyyymmdd</filename> the release date and
	<filename>arch</filename> is the architecture, i.e. one of
	<filename>i386</filename><!--, <filename>x86-64</filename>,
	<filename>ia64</filename>--> or <filename>alpha</filename>.
      </para>
      <para>
	For the Tru64 version naming is pretty much the same only replacing
	<quote>Linux</quote> by <quote>OSF1</quote>.
      </para>
      <para>
	The detailed naming of the RPM file may vary depending on the actual
	version.
      </para>
    </simplesect>
    <simplesect>
      <title>Distributed installation</title>
      <para>
	For the distributed installation, after becoming <quote>root</quote>
	just do a
      </para>
      <programlisting>
	rpm -U psm-x.y.z-yyyymmdd.Linux.arch.rpm
      </programlisting>
      <para>
	<command>rpm</command> will install all the necessary file to
	<filename>/opt/parastation</filename> and call the script
	<command>PSM_INSTALL</command> residing in the
	<filename>config</filename> directory, which will modify some
	configuration files in <filename>/etc</filename>. The modifications
	done by this script are the same discussed in some detail in <xref
	  linkend="Install_by_hand"/>.
      </para>
      <para>
	This has to be done on all nodes.
      </para>
    </simplesect>
    <simplesect>
      <title>Centralized installation</title>
      <para>
	To install ParaStation from RPM in a centralized fashion, after
	becoming <quote>root</quote> use the command
      </para>
      <programlisting>
	rpm -U psm-x.y.z-yyyymmdd.Linux.arch.rpm
      </programlisting>
      <para>
	on the NFS server machine to put all the ParaStation files onto
	disc. Make sure that <filename>/opt/parastation</filename> is exported
	and the NFS server is running (use <citerefentry>
	  <refentrytitle>showmount</refentrytitle>
	  <manvolnum>8</manvolnum>
	</citerefentry> to do so). Then mount the exported directory on all
	nodes to <filename>/opt/parastation</filename>. Afterwards run
      </para>
      <programlisting>
	/opt/parastation/config/PSM_INSTALL
      </programlisting>
      <para>
	manually on all nodes. The modifications done are discussed in some
	detail in <xref linkend="Install_by_hand"/>.
      </para>
    </simplesect>
  </section>

  <section>
    <title>Installation using <filename>.tar.gz</filename> files</title>
    <para>
      If the linux distribution in use does not support RPM there is the
      possibility to install ParaStation from a <filename>.tar.gz</filename>
      file.
    </para>
    <simplesect>
      <title>Getting the ParaStation <filename>.tar.gz</filename></title>
      <para>
	A <filename>.tar.gz</filename> file containing ParaStation can be
	obtained from the <ulink
	  url="http://www.par-tec.com/downloads/download.html">download
	  section</ulink> of the <ulink url="http://www.par-tec.com">ParTec
	  homepage</ulink>. The file of the linux version is usually named
	<filename>psm-x.y.z-yyyymmdd.Linux.arch.tar.gz</filename>, where
	<filename>x.y.z</filename> is the version number,
	<filename>yyyymmdd</filename> the release date and
	<filename>arch</filename> is the architecture, i.e. one of
	<filename>i386</filename><!--, <filename>x86-64</filename>,
	<filename>ia64</filename>--> or <filename>alpha</filename>.
      </para>
      <para>
	For the Tru64 version naming is pretty much the same only replacing
	<quote>Linux</quote> by <quote>OSF1</quote>.
      </para>
      <para>
	The detailed naming of the <filename>.tar.gz</filename> file might vary
	depending on the actual version.
      </para>
    </simplesect>
    <simplesect>
      <title>Distributed installation</title>
      <para>
	In the case of a distributed installation become <quote>root</quote>
	and change to the root directory <filename>/</filename>. Then just do a
      </para>
      <programlisting>
	gzip -cd psm-x.y.z-yyyymmdd.Linux.arch.tar.gz | tar xvf -
      </programlisting>
      <para>
	This will install all the necessary file to
	<filename>/opt/parastation</filename>. Afterwards the script
	<command>PSM_INSTALL</command> residing in the
	<filename>config</filename> directory has to be called:
      </para>
      <programlisting>
	cd /opt/parastation/config/PSM_INSTALL
      </programlisting>
      <para>
	This will modify some configuration files in <filename>/etc</filename>.
	The modifications done by this script are the same discussed in some
	detail in <xref
	  linkend="Install_by_hand"/>.
      </para>
      <para>
	These steps have to be executed on all nodes of the cluster.
      </para>
    </simplesect>
    <simplesect>
      <title>Centralized installation</title>
      <para>
	To install ParaStation from a <filename>.tar.gz</filename> file in a
	centralized fashion become root and change to the root directory
	<filename>/</filename>. Then use the command
      </para>
      <programlisting>
	gzip -cd psm-x.y.z-yyyymmdd.Linux.arch.tar.gz | tar xvf -
      </programlisting>
      <para>
	on the NFS server machine to put all the ParaStation files onto disc,
	i.e. to <filename>/opt/parastation</filename>. To enable ParaStation on
	this machine execute the script <command>PSM_INSTALL</command> residing
	in ParaStation's <filename>config</filename> directory:
      </para>
      <programlisting>
	/opt/parastation/config/PSM_INSTALL
      </programlisting>
      <para>
	The modifications done by this script will be discussed in <xref
	  linkend="Install_by_hand"/>.
      </para>
      <para>
	Now make sure that <filename>/opt/parastation</filename> is exported
	and the NFS server is running (use <citerefentry>
	  <refentrytitle>showmount</refentrytitle>
	  <manvolnum>8</manvolnum>
	</citerefentry> to do so). Then mount the exported directory on all
	nodes to <filename>/opt/parastation</filename> and run
      </para>
      <programlisting>
	/opt/parastation/config/PSM_INSTALL
      </programlisting>
      <para>
	manually on all nodes.
      </para>
    </simplesect>

  </section>

  <section id="Install_by_hand">
    <title>Installation by hand</title>
    <para>
      For full controll on the installation process you might not want to run
      the <command>PSM_INSTALL</command> script, but do the modification by
      hand. Therefor the changes made by this script will be discussed now step
      by step.
    </para>
    <note>
      <para>
	You have to be root to execute the following steps.
      </para>
    </note>

    <orderedlist>
      <listitem id="ibh_create_dev">
	<para><emphasis>Create the device entry</emphasis></para>
	<para>
	  If not yet done (e.g. from a previous installation), you must create
	  a character device:
	</para>
	<programlisting>
	mknod /dev/psm c 40 0
	chmod 666 /dev/psm
	</programlisting>
	<note>
	  <para>
	    This has only to be done for the MyriNet version of
	    ParaStation. You can leave out this step in ParaStation FE.
	  </para>
	</note>
      </listitem>
      <listitem id="ibh_services">
	<para><emphasis>Services</emphasis></para>
	<para>
	  The following lines must be appended to
	  <filename>/etc/services</filename>:
	</para>
	<programlisting>
	# ParaStation entries
	psld          887/tcp     # ParaStation License Daemon Start Port
	psid          888/tcp     # ParaStation Daemon Start Port
	# end of ParaStation entries
	</programlisting>
      </listitem>
      <listitem>
	<para><emphasis>Multicast setup</emphasis></para>
	<para>
	  ParaStation needs multicast support on all nodes, i.e. the installed
	  kernel has to support it. This is usually no problem if a standard
	  kernel from a common distribution is used. You have to enable
	  multicast support explicitely if you want build your own kernel. To
	  learn more about multicast take a look at the <ulink
	    url="http://jungla.dit.upm.es/~jmseyas/linux/mcast.howto/multic.html"> 
	    <citetitle>Multicast over TCP/IP HOWTO</citetitle></ulink>.
	</para>
	<para>
	  On nodes with more than one ethernet interface you have to setup a
	  defaultroute for the multicast traffic. This is done by
	</para>
	<programlisting>
	route add -net 224.0.0.0 netmask 240.0.0.0 dev ethX
	</programlisting>
	<para>
	  where <filename>ethX</filename> has to be replaced by the name of the
	  interface connecting to all other nodes.
	</para>
	<para>
	  Usually only the front-end machine has two ethernet interfaces in
	  use. Then you have to add the multicast route to the interface
	  connecting the front-end with all the nodes.
	</para>
      </listitem>
      <listitem id="ibh_inetd">
	<para><emphasis>(X)inetd Configuration</emphasis></para>
	<para>
	  This part of the installation process differs for the various Linux
	  distributions. If your system has
	  <itemizedlist>
	    <listitem>
	      <para>
		a file named <filename>/etc/inetd.conf</filename> (e.g. a SuSE
		distributions), read section <xref
		  linkend="ibh_inetd_suse"/>,
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		a directory <filename>/etc/xinetd.d</filename> (e.g. a RedHat
		distributions), read section <xref linkend="ibh_inetd_rh"/>.
	      </para>
	    </listitem>
	  </itemizedlist>
	</para>
	<orderedlist numeration="arabic" inheritnum="inherit">
	  <listitem id="ibh_inetd_suse">
	    <para><emphasis>Inetd Configuration</emphasis></para>
	    <para>
	      The following lines must be appended to
	      <filename>/etc/inetd.conf</filename>:
	    </para>
	    <programlisting>
	#
	# ParaStation daemon
	#
	psid stream tcp nowait root /opt/parastation/bin/psid psid
	#
	# ParaStation license server
	#
	psld stream tcp nowait root /opt/parastation/bin/psld psld
	    </programlisting>
	    <para>
	      Now, the <citerefentry>
		<refentrytitle>inetd</refentrytitle>
		<manvolnum>8</manvolnum>
	      </citerefentry>
	      must be triggered to reload this file:
	    </para>
	    <programlisting>
	/etc/init.d/inetd reload
	    </programlisting>
	  </listitem>
	  <listitem id="ibh_inetd_rh">
	    <para><emphasis>Xinetd Configuration</emphasis></para>
	    <para>
	      Create a file named
	      <filename>/etc/xinetd.d/parastation</filename> with the following
	      contents:
	    </para>
	    <programlisting>
	#
	# ParaStation daemon
	#
	service psid
	{
	disable         = no
	socket_type     = stream
	wait            = no
	user            = root
	server          = /opt/parastation/bin/psid
	server_args     =
	log_on_failure  += USERID
	}
	#
	# ParaStation license server
	#
	service psld
	{
	disable         = no
	socket_type     = stream
	wait            = no
	user            = root
	server          = /opt/parastation/bin/psld
	server_args     =
	log_on_failure  += USERID
	}
	    </programlisting>
	    <para>
	      Now, the xinetd daemon must be triggered to read this file:
	    </para>
	    <programlisting>
	/etc/init.d/xinetd reload
	    </programlisting>
	  </listitem>
	</orderedlist>
      </listitem>
    </orderedlist>
  </section>
  <section>
    <title>Installation of MPIch</title>
    <para>
      To enable MPI over ParaStation on your cluster an adapted version of
      <ulink url="http://www-unix.mcs.anl.gov/mpi/mpich/">MPIch</ulink> also
      has to be installed. The corresponding packet may also be found within
      the <ulink url="http://www.par-tec.com/downloads/download.html">download
	section</ulink> of the <ulink url="http://www.par-tec.com">ParTec
	homepage</ulink>. The file of the linux version is usually named
      <filename>mpich_a.b.cpsx.y.z_arch.tar.gz</filename>, where
      <filename>a.b.c</filename> is the MPIch version number,
      <filename>x.y.z</filename> is the ParaStation version number and
      <filename>arch</filename> is the architecture, i.e. one of
      <filename>i386</filename><!--, <filename>x86-64</filename>,
      <filename>ia64</filename>--> or <filename>alpha</filename>.
    </para>
    <para>
      The corresponding file for Tru64 has the name
      <filename>mpich_a.b.cpsx.y.z_tru64.tar.gz</filename>.
    </para>
    <note>
      <para>
	The ParaStation version number may differ from the one of the lasted
	ParaStation release. This is due to the fact that bug fixes within
	ParaStation that don't break compatibility of linked programs result in
	a change of the minor version number but don't make it necessary to
	rebuild the MPIch distribution, since the old one is still compatible.
      </para>
    </note>
    <para>
      After downloading the correct MPIch distribution file make sure to be
      root and change to the root directory <filename>/</filename>. Then
      unpack the <filename>.tar.gz</filename> file using
    </para>
    <programlisting>
	cd /
	gzip -cd mpich_a.b.cpsx.y.z_arch.tar.gz | tar xvf -
    </programlisting>
    <para>
      This will extract the ParaStation MPIch distribution to
      <filename>/opt/parastation/mpich</filename>. Since all these files are
      only needed for building MPI applications, but not for running them, it
      is sufficient to do the extraction only on the compile node or frontend
      machine.
    </para>
    <para>
      To enable the MPI commands to the users make sure that
      <filename>/opt/parastation/mpich/bin</filename> is included into the
      system wide <envar>PATH</envar> environment variable. Furthermore you
      might want to enable the MPI man pages. These reside in
      <filename>/opt/parastation/mpich/man</filename>. Please consult the
      documentation of the <citerefentry>
	<refentrytitle>man</refentrytitle>
	<manvolnum>1</manvolnum>
      </citerefentry> command on how to do this<footnote>
	<para>
	  Usually this is either done by modifying the <envar>MANPATH</envar>
	  environment variable or by editing the <citerefentry>
	    <refentrytitle>manpath</refentrytitle>
	    <manvolnum>1</manvolnum>
	  </citerefentry> configuration file, which is
	  <filename>/etc/manpath.config</filename> by default.
	</para>
      </footnote>.
    </para>
  </section>
  <section>
    <title>Further steps</title>
    <para>
      With this the basic installation of ParaStation is done. There remain
      some further step until ParaStation can really be used. These include:
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  the configuration of the ParaStation system
	</para>
      </listitem>
      <listitem>
	<para>
	  testing if everything works well
	</para>
      </listitem>
      <listitem>
	<para>
	  optionally the embedding of the ParaStation system into an allready
	  existing batch system.
	</para>
      </listitem>
    </itemizedlist>
    <para>
      These step will be discussed in the next chapter of this document.
    </para>
  </section>
</chapter>
  <!-- Keep this comment at the end of the file
  Local variables:
  mode: xml
  sgml-omittag:nil
  sgml-shorttag:nil
  sgml-namecase-general:nil
  sgml-general-insert-case:lower
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("main.xml" "book" "book" ("title" "bookinfo"))
  sgml-exposed-tags:nil
  sgml-local-catalogs:nil
  sgml-local-ecat-files:nil
  End:
  -->

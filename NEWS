psmgmt NEWS -- history of user-visible changes.

Copyright (C) 2010-2019 ParTec Cluster Competence Center GmbH, Munich

Please send bug reports, questions and suggestions to <support@par-tec.com>

*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: psmgmt 5.1.21 changes the explected content of psconfig    **
**  that might be incompatible with former configuations:              **
**   - the key NodeNo is now called Psid.NodeId (but NodeNo might be   **
**     used if no Psid.NodeId is found)                                **
**   - If Psid.Domain is set in a node's host object, only other nodes **
**     with the very same Psid.Domain will be seen                     **
**                                                                     **
*************************************************************************
*************************************************************************

Version 5.1.21:
===============
Bugfixes:
 - Fix segfault in pelogue plugin on race condition
 - Don't remove pspelouge config in pelogue needed by psgw callback
 - Fix various warnings brought by cppcheck and gcc-8.3
Enhancements:
 - Introduce psid domain concept (pt#2631)
 - Use Psid.NodeId in favour of NodeNo in psconfig
 - Add psgw route plugin "plugin02.py"
 - Make pspmix configurable via file and psiadmin
 - Add rudimentary support of psiadmin plugin commands to psgw
 - Improve log output in pelogue
Additional changes:
 - Lift required pmix-Version to 3.1.3
 - Add Uint64Array and Int64Array support to psserial


Version 5.1.20-1:
=================
Bugfixes:
 - Fix handling of SLURM_MPI_TYPE=none (srun --mpi=none)


Version 5.1.20:
===============
Bugfixes:
 - Break infinite loop when sending PSP_CC_MSG to daemon (j3t:#1305)
 - Fix potential memory leak in psenv
Enhancements:
 - Report node failure in step error output (pct:#298)
 - Support to start modular jobs: add psgw and psgw_spank plugins
 - Support openMPI by adding pspmix pluging adding PMIx support
 - Distribute reservation infomation to all involved node. Needed for pspmix
Additional changes:
 - Introduce PSSLURM_PMI_TYPE to choose the PMI version to use
 - Move hook PSIDHOOK_EXEC_CLIENT_USER after child born
 - Set task->fd to daemonfd before PSIDHOOK_EXEC_FORWARDER
 - Introduce PSIDHOOK_RECV_SPAWNREQ
 - Improve psidhook
 - Additional code streamlining


*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: psmgmt 5.1.19 changes psslurms prologue behavior. Prologue **
**  is no longer started by psslurm directly but only via the prologue **
**  plugin mechanism of the slurmctld.                                 **
**                                                                     **
*************************************************************************
*************************************************************************

Version 5.1.19:
===============
Bugfixes:
 - Protect PMI_BARRIER_ROUNDS from user modification in psslurm (pct:#251)
 - Use effective user ID to test working directory in psslurm (pct:#293)
 - Fix for hanging job packs (pct:#296)
 - Fix for interactive jobs using gres resources (juwelstrac:#2365)
 - Re-enable coredump capability after seteuid() (#2769)
 - Check if file-descriptor is valid (#2766)
Enhancements:
 - Set local node offline via psexec if fork() fails (pct:#299)
 - Export SLURM_GID, SLURM_JOB_STARTTIME and SLURM_PACK_JOBID to epilogue
 - Improve psslurm plugin interface: 'show resolveIDs' (juwelstrac:#2360)
 - Improve psslurm plugin interface: 'show tasks' and pack information
Additional changes:
 - Extract node information more efficiently in mpiexec
 - Drop support for prologue started via psslurm; use slurmctld prologue instead


Version 5.1.18:
===============
Bugfixes:
 - Fix wrong status reporting of pack leader job (pct:#287)
 - Fix broken requeue logic for batch jobs (juwelstrac:#2045)
 - Prevent infinite recursion in CHILDDEAD handling (#2740)
 - Prevent double execution of offline-script if prologue fails on
   mother superior
 - Don't use daemon functions from within forwarders
 - Fix various minor bugs unveiled by cppcheck
Enhancements:
 - Replace very slow expandHostList() by hostlist traversal (#2747)
   * Warning: psslurm option WEAK_NODEID_CHECK no longer supported!
 - Add option --psid_resolve to pspelogue (#2749)
 - Add support for arbitrary script path to psexec
 - Improve psserial's usablility for multiple users
Additional changes:
 - Fix problems unloading pelogue and psslurm
 - Let pelogue call hook PSIDHOOK_PELOGUE_RES
 - Remove obsolete logic for supporting old slurm versions
 - Cleanup, improved logging and fixing typos


*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: psmgmt 5.1.17 changes the protocol between pspelogue and   **
**  pelogue. This new version is *NOT* compatible with ParaStation     **
**  versions 5.1.16 or older when using the slurmctld prologue with    **
**  pspelogue.                                                         **
**                                                                     **
*************************************************************************
*************************************************************************

Version 5.1.17:
===============
Bugfixes:
 - Ensure errno will not get overwritten in different functions (jwt:#1189)
 - Prevent memory corruption in pelogue drop handler for fragmented messages
 - Fix logic error in psslurm unveiled by clang
 - Fix various memory leaks and bugs unvealed by cppcheck
 - Fix segfault in spawner for gdb, valgrind or mpichComp option set
Enhancements:
 - Use SLURM_PACK_JOB_NODELIST for pack jobs in pspelogue (jrt:#8923)
 - Major spawn speedup through:
   * Don't parse unused job core bitmap in psslurm
   * Pass step core bitmap without conversation to pinning code in psslurm
   * Adjust pinning to use unconverted step core bitmap
 - Ensure hanging jobs get released after MAX_TERM_REQUESTS
 - Check mandatory configuration options in pelogue
 - Let psslurm handle arbitrarily RCP responses (e.g. RESPONSE_JOB_INFO)
 - Export environment with prefix _PSSLURM_ENV_ from prologue to user procs
 - Let psexec return output from scripts
 - Fix error msg in psid forwarder
Additional changes:
 - Add PSIDHOOK_PELOGUE_RES and PSIDHOOK_PSSLURM_FINALLOC
 - Optimize addStrBuf(), str2Buf() and strn2Buf() and avoid strncpy()
 - Fix documentation in pluginforwarder.h


Version 5.1.16-1:
=================
Bugfixes:
 - Initialize PS_DataBuffer_t correctly (jwt:#1230)


Version 5.1.16:
===============
Bugfixes:
 - Fix reverse hostname lookup which broke Slurm's tree communication
 - Use array pack index to build a composite partition
Additional changes:
 - More accurate tracking of initialization of PSitems_t


Version 5.1.15-1:
=================
Bugfixes:
 - Workaround for orphan jobs using job packs (pct:#126)

*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: psmgmt 5.1.15 drops support of ParaStation daemon         **
**  protocol prior to version 411. Therefore compatibility with        **
**  versions prior to psmgmt-5.0.47 is dropped by this release.        **
**                                                                     **
*************************************************************************
*************************************************************************

Version 5.1.15:
===============
Bugfixes:
 - Fix segfault with sub pack groups (j3t:#1246,#1247)
 - Ensure correct byte-order between pspam and PAM module
 - Fix memory leak in psslurm's pinning code
 - Fix logical errors unveiled by scan-build
 - Fix bookkeeping if timesUsed has to be corrected in releaseThreads()
Enhancements:
 - Use fragmented PSP_CD_SPAWNREQUEST messages to speedup spawning
 - Add "_SLURM_SPANK_OPTION_*" to default filter of pspelogue
 - Enhance psserial for multile message handling
 - Introduce PSitems to abstract chunks of items
 - Improve logging for releaseThreads()
Additional changes:
 - Drop support for daemon protocol prior to 411 (released at 20.2.2015)
 - Refactor psaccountproc, Selector, PSIDrsrvtn, PSIDMsgbuf, PSIDFlwCntrl,
   and PSsignal to make use of PSitems
 - Introduce PSI_sendSpawnMsg()
 - Refactor pspmi plugin to use PSI_sendSpawnMsg()


Version 5.1.14:
===============
Bugfixes:
 - Fix pinning with different TPP for job packs (pct:#272, pct:#273)
 - Fix Slurm option cpus-per-task in combination with job packs (pct:#272)
 - Some minor improvement in error handling starting a job pack
Enhancements:
 - Report errors spawning a jobscript in psslurm to the user (pct:#262)
 - Use hash table and binary search to convert hostnames <=> PS nodeIDs
Additional changes:
 - Remove cast disliked by EL7's gcc 4.8.5 for stdc>89
 - Change the LIBEXECDIR define to PKGLIBEXECDIR, which is more precise


Version 5.1.13:
===============
Bugfixes:
 - Let psslurm drop messages if munge service is not available (#2727)

Enhancements:
 - Finalize support for slurmctld parallel prologue
   * Allocation information is distributed from the slurmctld prologue
     via pelogue to psslurm
   * The prologue and epilogue is now tracked in the allocation for jobs
     and steps
   * Every node is starting a local epilogue when receiving a terminate
     request and sending the result to the allocation leader
   * The allocation leader will track the epilogue results and offline
     unresponsive nodes
   * The psslurm configuration options DISABLE_PROLOGUE and
     DISABLE_EPILOGUE were removed
   * If slurmctld prologue is not used psslurm will automatically start
     the parallel prologue the usual way
 - Add timing information to psslurm tree forwarding
 - Add MEASURE_RPC configuration option to psslurm
 - Add MEASURE_MUNGE configuration option to psslurm
 - Add psMungeMeasure() to psmunge for measuring encode/decode times spend in
   libmunge


Version 5.1.12-1:
===============
Bugfixes:
 - Report all known jobs/steps in node registration status (#jrt:8639)


Version 5.1.12:
===============
Bugfixes:
 - Make sure srun terminates if spawning gets interrupted (juwelstrac:#683)
 - Fix memory corruption in psslurm if forwarded messages get dropped
 - Set correct node ID for unused slurmBackupController
 - Use dynamic memory allocation for psexec environment
 - Evaluate ENFORCE_BATCH_START also in handleCreatePart()

Enhancements:
 - Print user-visible message if execv() fails (juwelstrac:#629)
 - Use host tag to identify the local gres configuration (juwels:#440)
 - Accept fully qualified host names in slurm.conf
 - Use local addresses to identify the host configuration in psslurm.conf
 - Use host lookup table also for resolving node IDs in psslurm
 - PSConfig: Ignore host objects without NodeName set (#2631)
 - More detailed error reporting in PSI_sendMsg()
 - Add missing configuration options to psslurm.conf.template (#2719)

Additional changes:
 - Add PSIDHOOK_PELOGUE_START
 - Make isLocalNode() functionality public (#2711)
 - Remove obsolete ChangeLog-History of psslurm (#2720)
 - Prevent mpiexec et al. from unnecessary resolving (#2710)
 - Get rid of obsolete tests in dospawn()
 - Add psBlackHole debug plugin (#2721)
 - Push build environment to automake 1.16.1


Version 5.1.11:
===============
Bugfixes:
 - Reporting of invalid jobids might lead to orphan jobs (jrt:#3565)
 - Prevent possible segmentation fault when loading psslurm
 - Ensure pslog-protocol will not mess up (#1321)
 - Fix various possible problems unveiled by scan-build

Enhancements:
 - Disable prologue for batch jobs if DISABLE_PROLOGUE option is given
 - psconfig parser: try to cut hostname to short
 - Remove PMI environment variables if MPI support is disabled (psc:#251)
 - Add support for NodeAddr, ControlAddr, and BackupAddr in slurm.conf (#2687)
 - Retire signal() from all places of psmgmt (#516)

Additional changes:
 - Cleanup and improved documentation of Job_t, Step_t and Alloc_t
 - Ensure pspelogue and pelogue plugin have a common understanding of
   the protocol in between
 - Fix warnings unveiled by Clang6


Version 5.1.10:
===============
Bugfixes:
 - Disable kvsprovider if --pmidisable is given (psc:#264)
 - Make sure unknown jobs get released for REQUEST_KILL_TIMELIMIT
 - Avoid double free() if loading psmunge fails
 - Ensure correct use PSC_concat()
 - Fix various potential memory leaks

Enhancements:
 - Add support for SLURM 17.11 protocol including job packs
   * This drops support for SLURM 16.05 protocol
   * Standard protocol is SLURM 17.02
   * The SLURM protocol can be changed using the SLURM_PROTO_VERSION
     option of the psslurm configuration
 - Add pspelogue to allow slurmctld parallel prologues
 - Change psslurm CPU load reporting to one minute average (psc:#265)
 - Introduce jail plugin (#2666)
 - Detect the use of compression in psslurm bcast request
 - Improve handling of fragmented messages

Additional changes:
 - Move various functionality from libplugincommon to libpscommon. This
   includes environment and hostlist handling, serialization, etc.
 - Remove now obsolete add*ToMsgBuf() calls
 - Fix various warning unvieled by gcc-8


Version 5.1.9:
==============
Bugfixes:
 - Adapt psslurm to changed signal handling starting with v17.02.8
   (psc:#22, psc:#133)
 - Handle absence of Frequency statements in /proc/cpuinfo (#2621)

Enhancements:
 - Fix CPU frequency determination for ARM platforms
 - Add implementation for cpuBindType CPU_BIND_LDRANK to psslurm
 - Modified socket and ldom pinning

Additional changes:
 - Move verbose step launch infos to printLaunchTasksInfos()
 - Add test program for local pinning tests to simulate different
   pinning scenarios and see the resulting pinning.


Version 5.1.8:
==============
Bugfixes:
 - Fix segmentation fault in psslurm step callback (jrt:#6980)
 - Fix segmentation fault if epilogue start messages get dropped (jrt:#7129)
 - Ensure timer does not expire in localtime() (#2636)
 - Store and resend important Slurm messages if the slurmctld is
   temporally unavailable (jrt:#3389).
 - Switch to non-blocking read/write for Slurm messages (psc:#255).
 - Ignore flow-control messages withing libpsi (#261)
 - Handle executable names including ')' correctly in psaccount plugin
 - Fix message unregistration in plugins
 - Drop use of SIGUNUSED which was removed from glibc 2.26
 - Fix various bugs unveiled by gcc 7

Enhancements:
 - Add support for SLURM 17.02 in psslurm
 - Modify psslurm plugin's socket and ldom pinning
 - Show active and registered jobs in pelogue plugin's show query
 - Add support for RPC DAEMON_STATUS in psslurm (pct:#134)
 - Add support for RPC REQUEST_SHUTDOWN in psslurm (pct:#178)
 - Add support to change pelogue plugin's debug mask during runtime
 - Introduce PSP_CD_UNKNOWN message type to tell sender about not
   handling some messages
 - Allow to set the task-group via PSI_spawnService()
 - Split mpiexec into three executables: mpiexec, kvsprovider, and spawner
 - Hide connection reset with debug mask PSSLURM_LOG_COMM
 - Improve config parsing for various plugins
 - Improved debug output in psslurm

Additional changes:
 - Push automake to version 1.15.1
 - Drop support for SLURM 14.05
 - Major code refactoring, cleanup and streamlining concentrating on psslurm


Version 5.1.7:
==============
Bugfixes:
 - Prevent illegal nodes in clearRDPMsgs() (jrt:#6829)
 - Reusing PIDs for the psilogger in a single job corrupt psslurms
   task management (jrt:#6713)
 - Cleanup steps properly if master superior node disappears

Enhancements:
 - More efficient extension of buffers

Additional changes:
 - Unify PS ID range check in PSC_validNode()


Version 5.1.6:
==============
Bugfixes:
 - Prevent stuck psid if MPI_Comm_spawn requests wrong HW-type
 - Rectify pointer issues in pspmi
 - Fix various potential memory errors found by address sanitizer
 - Allow psidforwarder to create coredumps again

Enhancements:
 - Switch to non-blocking read/write for Slurm messages (psc:#255)
 - Store and resend SLURM messages to slurmctld (jrt:#3389).
 - Allow to pass extra info to per-node environment creator
 - First implementation of SLURM's 17.02 protocol in psslurm

Additional changes:
 - Eliminate obsolete dependency on ps_search_libs.m4
 - Get rid of SVN revision strings
 - Remove support of priviledged options from mpiexec
 - Hide connection reset with debug mask PSSLURM_LOG_COMM
 - Update regression test suite


Version 5.1.5:
==============
Bugfixes:
 - Ensure jobs get released if mother superior is unkown (jrt:#6645)
 - Catch rare race-condition (jrt:#6680)
 - Ensure srun will get an exit notification for all tasks (#6421)
 - Don't try to pack empty data if slurm message forwarding fails
 - Release resources assigned to failed spawns
 - Correct release of overcommited resources
 - Prevent inheritance of forwarder processes (#2629)
 - Check that task is still present (#2629)

Enhancements:
 - More scalable passing of children to grandparents upon parent's release

Additional changes:
 - Add new plugin delegateStat to peek into resource delegates for debugging


Version 5.1.4:
==============
Bugfixes:
 - Counting in CUDA_VISIBLE_DEVICES starts with zero


Version 5.1.3:
==============
Bugfixes:
 - Reworked shutdown process of psslurm and pelogue (jrt:#6401)
 - Fix bug introduced in 89783b4dda7f88b9f5 (jrt:#6536)
 - Fix segfault on psslurm unloading without a gres configuration

Enhancements:
 - Allow psid to manage its own cgroup hierarchy, without systemd interfering
 - Improved error output for invalid slurm protocol version
 - Suppress warning messages for admin users starting jobs via mpiexec (#2617)

Additional changes:
 - Change defaults for CGROUP_{ROOT,NAME} if systemd is used (#2566)


Version 5.1.2:
==============
Bugfixes:
 - Fix segfault in broken connection handling (jrt:#6428)
 - Set psid's loginuid to fix accounting (jrt:#6429)
 - Bitstrings are packed in hex format since Slurm 16.05 (jrt:#6426)
 - Fix memory corruption in psslurm gres processing

Enhancements:
 - Add psslurm-option 'ENABLE_FPE_EXCEPTION' to trap FPE instantly (jrt:#6290)
 - Add support for PMI 'abort' command (jrt:#6427)
 - Give client processes and their forwarders correct loginuid

Additional changes:
 - Make PSID_adjustLoginUID() part of psid's offical interface


Version 5.1.1:
==============
Bugfixes:
 - Grab correct exit code for pelogue scripts (jrt:#6406)
 - Fix pelogue's traverseJobs() (jrt:#6405)
 - Fix segfault in psslurm when I/O connections breaks (jrt:#6396)

Enhancements:
 - Adapt psid version information to missing SVN revs
 - Adapt psiadmin version information to missing SVN revs
 - Add new test tool to list all info types in protocol

Additional changes:
 - pluginfowarder's estatus and ecode validity now flagged
 - Major code cleanup dropping ancient protocol versions
 - Mark Sselect() as deprecated
 - Flatten psmom's directory tree


Version 5.1.0:
==============
Bugfixes:
 - pluginforwarder shall ignore PSP_CC_ERROR messages
 - Fix delayed spawns waiting for step (#6354)
 - Fix memory allocation in pluginstrv
 - Fix memory allocation in PMI spawn handling

Enhancements:
 - New function dupDataBuffer()
 - Remove PSI_INPUTDEST in rank environment instead of mpiexec

Additional changes:
 - Merge most recent version of psslurm plugin from psslurm-devel
 - Allow psmgmt RPM to replace psmgmt-slurm1605
 - Move psslurm plugin into its own sub-RPM
 - Push plugin API version to 117 for PSIDspawn_localTask()
 - Add new testplugin to delay SLURM messages


*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: psmgmt 5.0.54 changes the default behavior of psaccount.   **
**  From now on accountpoll = 0 will be considered again, i.e. no      **
**  polling on used resources will take place if accountpoll is set    **
**  to 0. Since 0 is the default setting this change might break the   **
**  expected behavior of resource accounting. Nevertheless, psmom      **
**  (and also psslurm) will overrule this setting on startup.          **
**  The system's  settings for accountpoll shall be reconsidered,      **
**  anyhow.                                                            **
**                                                                     **
*************************************************************************
*************************************************************************

Version 5.0.54:
===============
Bugfixes:
 - Let mpiexec propagate PSI_TPP (#2594)
 - Various critical fixes for psaccount
   - Ensure that a job's first accounting update is always sent
   - Ensure that the last update is sent even though all clients are disabled
   - Don't let the jobscript resources spoil the minCputime value
   - Get rid of an useless limitation when forwarding aggregated data
 - Allow accounting of pluginforwarder's child
 - Prevent pspam from killing random processes
 - Determine UID more reliably in psaccount
 - Help psmomforwarder to escape loop on SIGCHLD
 - Don't set PMI_APPNUM if PMI is disabled (merge from psslurm)
 - Ensure \0 terminated strings at several places
 - Omit leading garbage in printRefList() (visible during shutdown)
 - Ensure PMI actually disables accounting temporarily during initial KVS update
 - Prevent psid from crashing when unloading certain plugins
 - Make psaccount summing up maximum threads correctly

Enhancements:
 - Compute configuration hash value once psslurm is merged (PCT:#254)
 - Let mpiexec provide appnum independently of PMI in PSI_APPNUM
 - Merge psaccount, psexec, pspam, and pelogue plugins from psslurm
   - This includes major refactorings
 - Reorganize all plugins according to #2580
 - Enable pspam to support shared nodes
 - pspam has a KVS interface now
 - New pspam API function psPamFindSessionForPID() as required by psmom
 - Replaces psmom's according functionality by pspam
 - psaccount can ignore procs with loginuid -1 or uid 0, zombies, etc.
   - Ignoring root processes configurable via IGNORE_ROOT_PROCESSES
 - Allow changing psaccount's debug-mask during runtime
 - pelogue has a KVS interface now that also provides some statistics info
 - Introduce new task-group TG_PLUGINFW
 - Replace libreadline by improved version of linenoise

Additional changes:
 - Fix and simplify spec file
 - Add psmgmt.vipsconfig to documentation
 - Merge .gitignore from psslurm-devel
 - Partly refactoring of psmom
 - psmom's pam_psmom.so is replaced by a symlink to pam_pspam.so
 - Allow building RPMs even if pam-devel is missing
 - Add PSIDHOOK_PELOGUE_PREPARE hook
 - Merge major parts of the plugincommon library
   - Incl. pluginforwarder, plugincomm
   - Major refactoring of merged parts allowing for better scalability, etc.
 - Make psaccount using pre-allocated structs to store /proc snapshot
 - Rework psaccount's data aggregation
 - Allow NULL as buf in addDataToMsg()
 - Allow to receive 0-length strings in plugincomm
 - Add PSIDspawn_localTask() to be used by pelogue, pluginforwarder, etc.


Version 5.0.53:
===============
Bugfixes:
 - Merge bugfix from psslurm-devel with some changes (jrt:#6067)

Enhancements:
 - Make spawnTasks public for use within plugins
 - Introduce PSIDHOOK_CLEARMEM
 - Allow cleanup of futile spawn information (jrt:#5792)
 - Replace obsolete gethostbyaddr() by getnameinfo() (#2589)
 - Replace obsoletet gethostbyname() by getaddrinfo() again (#654)
 - Don't let psidclient and psidcomm spoil the global namespace
 - Initialize fragmentation layer explicitely in psmom

Additional changes:
 - More booleanization


Version 5.0.52:
===============
Bugfixes:
 - Ensure all fds are handled if number is increased in config (jrt:#5879)
 - Resolve byte-ordering clash between psmom and pam_psmom (dt:#1567)
 - Fix merge done in r9400
 - Fix minor memory leak
 - Prevent potential segfault in common node down hook handler

Enhancements:
 - Get rid of libreadline dependencies, use linenoise (#1690)
 - Don't let psidutil spoil the global namespace
 - Use a logger for psiadmin's errors

Additional changes:
 - Minor improvements if msg components are not densely packed
 - Merge various changes from psslurm-devel
 - Get rid of some useless snprintf() in pluginmalloc.c
 - Add plugin debug function to log binary data in hex format


*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: psmgmt 5.0.51 dropps support of RDP SYNNACK messages.      **
**  Therefore compatibility with versions prior to psmgmt-5.0.48 is    **
**  dropped by this release. This new version is *NOT* compatible      **
**  with ParaStation versions 5.0.47-3 or older. A setup of the        **
**  current version mixed with ones prior to 5.0.48 will *NOT* work.   **
**                                                                     **
*************************************************************************
*************************************************************************

Version 5.0.51:
===============
Bugfixes:
 - epoll requires special handling of stdin in psilogger (#2561)
 - Prevent partition registrations from handled as normal requests (jsc:#181)
 - Ensure that resource delegates never get released outside of psmom (dt:#1495)
 - Ensure psid has correct permissions to call openpty() (#2549)
 - Never exit in hook PSIDHOOK_EXEC_CLIENT_USER
 - Fix memory leak in selector
 - Fix some more file lists for the build-system

Enhancements:
 - New mechanism for task epilogue execution
 - First working version of the cgroup plugin (jrt:#5439)
 - Unload plugin even if cgroup got removed (jrt:#5680)
 - 'plugin show cgroup key status' prints cgroup's status (#2558)
 - Add PSIDHOOK_JAIL_CHILD for cgroup plugin. Push plugin API version to 115
 - Improve usability of mpiexec's --valgrind option
 - Allow const tags in logging facility
 - PSP_strLen() will keep its argument thus allow const arguments
 - Toughen pscpu for different sizes of PSCPU_mask_t

Additional changes:
 - Remove obsolete RDP_SYNNACK message type from RDP (#2426)
 - Merge large parts libplugincommon from the psslurm-devel branch
 - More use of PSP_putMsgBuf()/PSP_getMsgBuf() in psidpartition
 - More use of bool instead of int all over the code
 - Adapt various plugins to libplugincommon changes
 - Streamline psresport plugin


Version 5.0.50-1:
=================
Bugfixes:
 - Fix MPI_Comm_spawn()
 - Fix memory leak in pssh

Version 5.0.50:
===============
Bugfixes:
 - Printing PSCPU_set_t via PSCPU_print() might be broken (psc:#243)
 - Fix mpiexec's -e option for environment propagation
 - Actually adapt psiadmin's "list proc" directive to screen-width
 - Prevent sendReqList() from messing up the stack for nodes >72 cores
 - Create pipe()s with correct euid between forwarder and client
 - Also unblock SIGUSR[12] in PSID_resetSigs()
 - Catch rare case of new parent's node down during process inheritance
 - Ensure all file-descriptors are closed when exec()ing logger
 - Fix logic in error reporting while releasing task
 - Check for failed allocation in putil/env
 - Fix parser-syntax of psiadmin's 'list jobs' directive

Enhancements:
 - Selector now uses epoll() (psc:#231)
 - Remove mpiexec's limitation on number of executables (jrt:#5402)
 - Use signalfd() to handle SIGCHLD, SIGUSR1 and SIGUSR2 in psid
 - Take IP addresses from psconfig avoiding name resolution bursts
 - Clone environment optimization during spawn
 - Count the number of sent NACKs per connection within RDP
 - Catch and forward stray SIGTERM in psidforwarder
 - Delayed finalization of psid's parent process (#2522)
 - Report daemon failure via psid's parent process (#2522)
 - Activate PSID_clearMem() during task-spawn and PSID_execScript() (#1218)
 - free() all memory used by RDP on exit or by request (#1013)
 - Suppress warning on membind if using SLURM (psc:#226)
 - Reorder psid's module initialization
 - Don't wait too long in forwarder befores re-sending FINALIZE message
 - Make PSID_cancelCB() working for file-descriptors beyond FD_SETSIZE
 - Merge KVS related changes from psslurm
 - Add new hooks PSIDHOOK_EXEC_CLIENT_USER, PSIDHOOK_FRWRD_DSOCK
     and PSIDHOOK_PELOGUE_FINISH required by psslurm
 - Let psilogger handle daemon messages via Selector.
 - Re-organize psidforwarder: Use signalfd, improved error messages, etc.
 - Prepare for asynchronouos inheritance of children (??)

Additional changes:
 - Add various systemd example override files (jurecatrac:ticket:4718)
 - Simplify handling of the pam config file
 - Refactoring of psidforwarder, psilogger (booleanize, Swait(), etc.)
 - Use a dispatcher registered in RDP to handle RDP messages.
 - Add PSP_tryPutMsgBuf()
 - Get selector structures in chunks.
 - Make PSpart_encodeReq() compatible to PSP_putMsgBuf() et.al.
 - Suppress one warning coming out of psh
 - Include psconfig docs for "make dist"
 - psprotocol.h now only depends on pstaskid.h instead of pstask.h
 - Mark kvsprovider's terminateJob() to be 'noreturn'
 - Add annotation for iwyu tool.


Version 5.0.49:
===============
Bugfixes:
 - Check Selector's file-descriptors if Sselect() returns with error (#2498)
 - Save errno before doing further calls at various places (jrt:#3316)
 - Guard dynamic memory related calls in msg_SPAWNREQ() (psc:#214)
 - Make psid's behavior under SIGUSR2 bombardment nicer (jrt:#3694)
 - Prevent duplicating messages on ENOBUFS in RDP's sendto()
 - Fix memory corruption if realloc() actually moves data
 - Ensure fd is in valid range within the selector facility

Enhancements:
 - Configurable delay of SIGKILL after signals from relatives
 - Support of a more fault tolerant MPI developed in the context of DEEP-ER
 - Replace getdtablesize() by sysconf(_SC_OPEN_MAX) and call less frequently
 - Improve psiadmin's output of 'list load' for load > 100

Additional changes:
 - Change RPM's name when built without psconfig support (#2502)
 - Adapt testacct to newly available accounting data


Version 5.0.48:
===============
Bugfixes:
 - Suppress the disfigurement discussed in jrt:#394
 - Catching SIGFPE for a normal shutdown of psid is a bad idea (jrt:#424)
 - Ensure myUse is big enough for huge partThrds (jrt:#273)
 - Guard psaccount's periodicMain (j3t:#679)
 - Prevent getPSIEnv() from wrongly matching longer names (psc:#183)
 - Block SIGCHLD at various places (psc:#192)
 - Enforce RDP-connections getting closed on both sides (#1681)
 - Make pssh using the remote settings for a user's shell (#2414)
 - Handling of AdminUsers configuration in psconfig
 - Present error message when dynamic reservation fails
 - Fix resource bookkeeping when tpp is different from 1
 - Fix reading of resource limits with psconfig
 - Fix psconfig configuration template
 - Fix logic in logger's panic output
 - Prevent segfault if libedit (not updating rl_line_buffer) is used

Enhancements:
 - Support environment setting in KEY=VALUE style in psconfig
 - Allow to suspend and resume jobs and resources with reservations
 - Enable to count released resources within a reservation.
 - Provide more information to the RM when releasing dynamical
     resources (PSIDHOOK_RELS_PART_DYNAMIC)
 - Add vipsconfig template for psconfig configuration
 - Implement mpiexec's -ppn option (#845)
 - Close unneeded file-descriptor before exec()ing the actual client process
 - Allow to print smaller CPU-sets via PSCPU_print_part()

Additional changes:
 - Adapt dyn-resource example plugin to new HOOK parameters
 - Expanding RCS-style keywords again
 - Clean up PSP_INFO_LIST_GETNODES (never used due to PSP_INFO_LIST_RESNODES)


Version 5.0.47-3:
=================

Bugfixes:
- Leave handling of resDelegate to psmom/psslurm (#2412)
- Close potential memory leak.

Additional changes:
- Optional build rpms without psconfig support.
- Do not filter out -Wall and -Wextra


Version 5.0.47-2:
=================

Bugfixes:
- Re-enable OMP_NUM_THREADS handling in mpiexec.

Enhancements:
- Implement MPI_Info_set(<info>, "tpp", "<N>")


Version 5.0.47-1:
=================

Bugfixes:
- Before deleting a delegate psmom must remove all references (#2409)
- Fix some more warning notified by clang's scan-build.

Enhancements:
- Add alternative debugging access to psilogger
- Suppress psilogger's output on SIGUSR1 when SLURM is detected


Version 5.0.47:
===============

Bugfixes:
- Init script should be able to restart the psid after a package update
- PMI plugin: Fix receiving of large PMI messages
- Fix problem when sharing a batch-partition between several MPI-jobs (jt:#7554)
- Actually respect the chosen hardware type in mpiexec
- Ensure that HW-types are handled correctly during spawn
- Bind RDP's UDP socket to the configured IP address
- Fix malloc() size error in mpiexec (allocation was too large)
- Fix many memory leaks and warning notified by clang's scan-build
- Close unneeded file to pid_max as reported by D. Krause.
- Fix location of parastation.conf.tmpl on RedHat based distributions
- timer.h needs to include stdio.h for FILE definition

Enhancements:
- New resource handling: partition / reservation / slots
- Improved integration of resources handling with psmom
- Add support for dynamic resource allocation as required in DEEP
  * PSIDHOOK_XTND_PART_DYNAMIC, PSIDHOOK_RELS_PART_DYNAMIC added
  * PSIDpart_extendRes() added
  * Therefore push plugin API to 112
- PSIDpart_register() allows to register resources provided by external RMS
- Upgrade psmom to just register partitions. Shall help with #1187 and #2049
- PSI_DYNAMIC allows to enable dynamic resource allocation
- Add support for -tpp (threads per process) to mpiexec
- Support per spawn tpp and options in mpiexec
- Release resources in partition management (#1988)
- Allow to set psid's resource-limits via psiadmin (#1042)
- Mark kvs-providers in psiadmin accordingly
- Improve warning in PSP_putMsgBuf() and PSP_putTypedMsgBuf()
- Prepare spec-file for /etc/SuSE-release to disappear

Additional changes:
- Remove support to consider resources of ancient (+10 years old) applications
- Add example plugin 'dyn_resources' to test dynamic resource allocation
- PSP_getMsgBuf() / PSP_tryGetMsgBuf() help to fetch data from message buffers
- Mark psmgmt.sh and psmgmt.csh as %config(missingok,noreplace) (psc:#150)
- Rename psmom's ChangeLog-History, README and LICENSE.OpenPBS since they
  end up in their own directory, anyhow.
- Add option to build without psconfig support


*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: psmgmt 5.0.46 enables configuration via psconfig.          **
**    Nevertheless, for compatibility reasons psconfig is ignored as   **
**    long as /etc/parastation.conf exists and has not zero length.    **
**    Thus, updating to psmgmt-5.0.46 requires to either move the      **
**    configuration file saved to /etc/parastation.conf.rpmsave back   **
**    to its  original location /etc/parastation.conf or to update     **
**    the information in the psconfig database accordingly.            **
**                                                                     **
*************************************************************************
*************************************************************************

Version 5.0.46:
===============

Bugfixes:
- Return full info on errors and TIDs from PSI_spawn() et al. (#2348)
- Prevent re-enabling stdin after all input was read (#2331)
- Fix relative executable path in MPI_Comm_spawn()
- Fix argument manipulation in psid (#2334)
- Enable --envall even on further steps of spawning (#2332)
- pspmi might segfault on psiadmin's 'plugin set/show/unset' directives
- Ensure to handle sufficient number of service processes (#2230)
- Ensure input forwarding works even if clients join late
- Prevent segfaults by corrupted PSP_DD_GETPARTNL messages (#2288)
- Catch segfault in the rare case of apps connecting to psid without
    sending data (#2252)
- Fix race condition in registerClient() when spawning multiple KVSs
    concurrently: assure to assign unique service ranks
- Ensure all nodes are updated on changed hardware-status
- Fix mpiexec's --merge option for the case of dynamic spawns
- Make logger work even if no stdin is provided and psid is connected
    via fd 0 (#2273)
- Improve robustness of PSI_spawn() et al.
- Several minor fixes highlighted by clang's scan-build.

Enhancements:
- Add support for MPI_Comm_spawn_multiple()
- Start multiple binaries via mpiexec using the colon syntax (#2154)
- Support of 'path' and 'arch' info keys of MPI_Comm_spawn().
- Add support for psconfig
- Improved flow-control which hopefully fixes the problem of psid bloats
- Let kvsprovider kill all its children on SIGTERM (#2201)
- Rely on psid's PSID_checkPrivilege() for some privilege checking
- Make pamdir (installation path of pspam plugin) configurable (#2302)
- Add valgrind support also for spawned processes
- More intelligent way of psmom to obtain jobs from multiple PBS servers
- Switch %postinstall action to 'service inetd try-restart' (#1932)
- Be more relaxed to leave the logger's raw-mode.
- Enforce client messages to have correct sender information
- PSID_cancelCB() allows cancellation of callbacks for scripts or
    functions executed asynchronously (#1503)
- Streamline propagation of resource-limits.
- New function PSCPU_cmp() to compare CPU-sets
- Add Selector_isActive() to check a selector's status from outside
    the selector facility.

Additional changes:
- Remove support of mixed operation with ancient versions of psmgmt
- Remove hard-coded /etc (#2301)
- Remove all non-GNU paths from the build system (#2302)
- Add dependencies on PAM and NUMActl in spec file (#2349)
- Add popt-devel to general BuildRequires (#2284)
- Improvements in the build system
- Adapt the no_flowcontrol plugin to the new flow-control
- Forward APPNUM parameter from mpiexec to pmiclient.
- Add print_list_entry macro to the gdbinit definitions
- Add print_msg_list macro to the gdbinit definitions


Version 5.0.45:
===============

Bugfixes:
- psaccount: update used cpu time periodically (#2147)
- psmom: prevent protocol deadlocks from third party programs (jt:#6971)
- psmom: Don't remove jobinfo for jobs with no walltime limit.
- Fix psiadmin's output for 'list jobs' and 'list plugins'
- Fix accounting again. This was broken by r8746.
- Re-add psaccview.
- psmom: fixed race condition when verfiying the scratch directory (DIR_TEMP).
- Fix many bugs detected by LLVM's scan-build.
- Correct cleanup of processes spawned via PMI_spawn()
- Fix possible segfault in mpiexec's output merging (mpiexec -m)

Enhancement:
- Allow more than 32 cores per node
- Add valgrind support to mpiexec
- Enable PSP_SCHED_YIELD in mpiexec, if overbooking is requested (#151)
- Remove hardcoded paths in pspmi and psmom (#2074)
- Short proc title of psidfw to give more info on the actual process
- psmom: Only root uses the master UNIX socket for local communication
- New psiadmin directive 'list installdir'
- Tell MPI processes to use PMI version 1
- Start KVS service process on starter node
- Move also spawner process of PMI_spawn() when __MPIEXEC_DIST_START is set
- Resolving nodelist's hostnames only required for OpenMPI
- Add lightweight memory debugging for psaccount, pspmi and psmom


Version 5.0.44:
===============

Bugfixes:
- Prevent segfault due to access of outdated task-structure (#2060)
- kvsprovider should report to stderr not syslog (#2040)
- kvsprovider has to exit on itself if pspmi plugin is absent
- Propagate PMI_BARRIER_TMOUT and PMI_BARRIER_ROUNDS to all kvsproviders
- psmom: Flag copy forwarder and its children always valid
- psaccount: Free all config objects when the plugin gets unloaded
- psresport: Unregister hooks and message handler if initialisation fails
- psmom: Unregister hooks and message handler if initialisation fails
- More minor bugs and warnings detected by LLVM's scan-build fixed

Enhancements:
- psmom version 5.2.10-20 merged into psmgmt
- Place spawner/kvsprovider on own nodes when __MPIEXEC_DIST_START is set
- Let mpiexec output the TID of service processes in verbose mode
- psmom: Moving the psid spawner process is now save (#2071)
- psmom: Try every known pbs server on job obit for failover
- Meaningful process title for the kvsprovider
- More self-explanatory CC_ERROR log messages

Additional changes:
- Omit psid's dependency on libpsi and libpse.


Version 5.0.43-1:
=================

Bugfixes:
 - prevent kvs-provider getting stuck in loop

Enhancements:
 - Finally, handle logger's prfx, too. This should help with #1087
 - Use malloc_trim() instead of malloc()/free() on  SIGUSR2


Version 5.0.43:
===============

Bugfixes:
 - Fix segmentation fault when growing client structures for negative
   ranks in the logger
 - Prevent PSP_DD_SENDCONT-storms possibly initiated by forwarded
   PSP_CD_RELEASE messages
 - Prevent false RELEASERES messages when child is inherited several times
 - Fix possible race whithin deleteClient(): SIGCHLD might lead to premature
   invalidation of task structure.
 - Don't release parent before all children are inherited. This should fix
   a possible race unveiled by the new kvs-provider.
 - Pre-allocate some fmt for logger (#1087)
 - Drop PSP_CD_RELEASE correctly to prevent hanging processes
 - Drop PSP_CD_NOTIFYDEAD correctly and don't send PSP_NOTIFYDEADRES twice

Enhancements:
 - Support for MPI_Comm_spawn
 - KVS code moved from logger into service process (kvs-provider)


*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: Starting with psmgmt 5.0.42 the pspmi plugin is mandatory  **
**  for the MPI2 startup. Therefore, it has to be added to the         **
**  parastation configuration.                                         **
**                                                                     **
*************************************************************************
*************************************************************************


*************************************************************************
*************************************************************************
**                                                                     **
**  Remark: psmgmt 5.0.42 pushed pslog to version 3. This new version  **
**  is *NOT* compatible with older parastation versions. Therefore, a  **
**  setup of current version mixed with ones prior to 5.0.42 will      **
**  *NOT* work                                                         **
**                                                                     **
*************************************************************************
*************************************************************************

Version 5.0.42:
===============

Remark: The pspmi plugin is now mandatory for the MPI2 startup and should
be added as default to the parastation configuration.

Remark: Pushed pslog to version 3. This new version is *NOT* compatible
with older parastation versions.

Bugfixes:
 - Various changes to prevent psid from bloating (#1087)
 - print all help messages of mpiexec to stdout (#1926)
 - Avoid directory clash of /var/account (#1930)
 - Fix possible segmentation-fault in psiadmin's auto-completion
 - Fix memory-leak in psiadmin's parser.

Enhancements:
 - Keep a history of last accounted jobs to suppress confusing error messages
 - Make hooks used by pspmi plugin official. Pushed plugin API to 110
 - Let the psaccounter started by psid run as root
 - Ordinary users only get their own accounting records using psaccounter
 - PMI layer moved from the psidforwarder into the pspmi plugin
 - Optimized distribution of PMI values and keys over daisy chain

Additional changes:
 - Let MPI processes fail if no pspmi plugin is loaded.
 - Support for PMI spawn prepared (actual spawning still missing) (#1539)


Version 5.0.41-2:
=================
Additional changes:
 - Enable coredumps of forwarder on SIGPIPE for debugging purposes.


Version 5.0.41-1:
=================
Bugfixes:
 - Prevent call of iterations over message-buffers recursively. This
    should fix new problems reported on JUDGE (JUDGE-TRAC #412)


Version 5.0.41:
===============
Bugfixes:
 - Prevent lists of messages-buffers from corruption due to
   asynchronous operations. (JUDGE #412)
 - Add missing header include for setrlimit().

Enhancements:
 - Speedup (un-)blocking of SIGCHLD by preventing actual syscalls.
 - Speedup (un-)blocking of timers by cashing the latest search-result.


Version 5.0.40-2:
=================
Bugfixes:
 - Prevent from message floods due to flow-control. (#1907)
 - Block any asynchronous action while doing garbage collection on
   message buffers. (#1904 / #1907)
 - Prevent race-condition that might lead to double free() of msgbufs
   (#1904 / #1907)
 - Don't let the init script confuse psidforwarder with the main psid
   process (#1907)

Enhancements:
 - Only do PStask_gcSig() with expensive blocking of signals, if
   required.


Version 5.0.40-1:
=================
Bugfixes:
 - Fix cpuinfo calls on Intel platforms (#1896)


Version 5.0.40:
===============
Bugfixes:
 - Allow to overbook nodes without pinning (#1877).
 - Don't spawn broken tasks, if unable to determine logger's TID (#1844).
 - Fix possible deadlock in psidforwarder's signal handler (#1708)
 - Be more careful when asynchronously modifying daemon's signal-lists.
 - Don't let send stop/cont messages disturb the partition request process.
 - Guard PStask_clone() from rare races on list iterations.
 - Ensure keeping the last chunk of msgbufs.
 - Don't drop message, if buffers are temporarily unavailable in
   the IP stack. Instead try to re-send.
 - Ensure that timeout might expire several times in PSLog_read().
 - Prevent futile daemon message on selector during shutdown
 - Fix one possible deadlock in flow-control between forwarder and
    logger on heavy traffic from both sides. For this, new messages
    types PSP_CD_SENDSTOP and PSP_CD_SENDCONT were introduced.
 - psh: omit newline after prompt when using "-s" (#1797)
 - Ensure to really use the correct abstract UNIX socket as the local
   service port
 - forward client data before cleanup up jobs
 - fixed segfault/list corruption in psaccount plugin (#1711)
 - account jobscripts and children from serial jobs
 - correct accounting of multiple mpiexec calls in a parallel job

Enhancements:
 - Enable binding to memory-nodes as default (#1747).
 - Added support for the MVAPICH PMI process map extension.
 - Added support for MPI_LOCALNRANKS and MPI_LOCALRANKID needed by libpsm
 - Use Selector facility within psidforwarder (#1648)
 - Implement 'parameter' directive in psiadmin to allow modification of
   local parameters within the admin (#633).
 - Allow psiadmin's 'list' directive to show hostnames (#490).
 - Allow psiadmin's 'show' directive to print hex-numbers (#612).
 - Check kernel.pid_max for compatibility with PStask_ID_t (#1767)
 - implemented psaccount plugin's set/unset commands
 - instantly cleanup jobs on psmom request
 - better cleanup of leftover jobs/clients
 - continously forward accounting information to logger node
 - implemented psaccount plugin's show and help calls of plugin API

Additional changes:
 - Use $localstatedir instead of /var.
 - Change defaults of $sysconfigdir and $localstatedir to /etc and /var,
   respectively.
 - Added PSIDHOOK_CREATEPARTNL and pushed the plugin API to 109.
 - Trigger a 1k malloc()/free() cycle via SIGUSR2 to psid.
 - added configuration file for psaccount plugin


Version 5.0.39:
===============
Bugfixes:
 - Make pssh's -e and psmstart's --exports options working.
 - Fix problem in RDP with window-size
 - Ensure message-buffers get free()ed when RDP fails to establish connection

Enhancements:
 - Startup support for OpenMPI executables (version 1.5 and higher) (#580)
 - Add new features required by psmom to solve #1477
 - Prevent forwarder from excessive logging.
 - More robust inline assembly in corePerPhysical()

Additional changes:
 - Move license to QPL


Version 5.0.38:
===============
Bugfixes:
 - syslog() might deadlock. Related to r8548 (#5285)

Enhancements:
 - Add support for GridEngine PE-files. (#932)
 - Improved clash-detection on resources between CLI, environment and
   batch-system
 - Add 'silent' option to psiadmin's shutdown directive and be more verbose
   during shutdown (#1572)
 - Master socket now uses Linux's abstract address. (#1573)
 - Get rid of explicit lock-file.

Additional changes:
 - Move legacy MPI starters into separate sub-package (#1584)
 - Get rid of ELAN-support, since Quadrics QsNet seems to be dead (#1591)


Version 5.0.37:
===============
Bugfixes:
 - Block SIGCHLD while doing syslog() in order to prevent psid from deadlocks.
   syslog() is not re-entrand! (JUDGE-TRAC #141)
 - Ensure, that all TASKDEAD-messages are delivered to new master-psid after
   failover. Additionally, don't tell new master about jobs currently shutting
   down.
 - Actually enable dumping of too-long messages tail. This completes the
   changes done in r8132.
 - Get rid of obsolete timer-entries after fork(). Might lead to strange
   behavior, if timer is pending during fork()
 - Connection to syslog has to be re-opened after cleanup for fork()
 - Selectors shall be removed when corresponding file-descriptor is closed.
 - Remove spurious TAB in output when talking to plugins (#1481).

Enhancements:
 - Prepare psiadmin to print-out hostnames instead of node IDs sometime (#490)

Additional changes:
 - Improve messages from psid's plugin-handling to psiadmin.
 - Include stub into test-plugin for extraordinary long help-messages.


Version 5.0.36:
===============
Bugfixes:
 - Beautify psiadmin's 'plugin help/show/...' output (#1481)
 - (quick fix) psaccount logging via mlog in the psmom forwarder can let
   it exit unexpectedly.
 - If old task-structure found during enqueue delete the right one.

Enhancements:
 - Replace gethostbyname() with getaddrinfo() (#654)
 - If PSI_LOG_SILENT is set, logger will suppress all output.
 - Next generation plugin API (#973)
 - New type of timeout-handlers receiving the timer ID and additional
   information upon elapse (#1361)
 - sendSignal2Session() returns number of children signal was sent to
 - psid shall not block SIGCHLD most of the time. Instead, only critical
   code-regions are fenced by blocked SIGCHLD (#1333)


Version 5.0.35:
===============
Bugfixes:
 - Correct detection of psiadmin and mpiexec started from within scripts
   run via pssh (#1280)
 - psilogger suppresses unnecessary warning on duplicate FINALIZE (#1304)

Enhancements:
 - 'pssh -r' enables pssh to be used as transport for rsync (#504)
 - Cancel PMI-barrier warning after all clients joined (#1172)
 - Let the forwarders set there process title
 - PSIDHOOK_SHUTDOWN realized (#1215)

Additional changes:
 - Add sample .gdbinit with some usefull functions for debugging psid.


Version 5.0.34:
===============
Bugfixes:
 - psiadmin prints out numerical IP address, if 'resolve' cannot get hostname
 - Fix pinning, if node 0 was not yet involved. Before wrong partition
   request was encoded with false protocol-version.

Enhancements:
 - New psmgmt-devel RPM holds additional headers for plugin development (#1100)
 - mpiexec accepts multiple occurrences of -e option (jt:#4515)


Version 5.0.33:
===============
Bugfixes:
 - Fix problem in flow-control disturbing the psaccounter daemon
 - Suppress unnecessary warning, if allocation of partition fails
 - Improved plugin handling
 - Fix psiadmin's 'range' command broken in last version

Enhancements:
 - Propagate PATH and LIBRARY_PATH environment automatically (#1173)
 - Add psaccount plugin providing advanced accounting functionality
 - More intuitive user-handling in configuration-file

Additional changes:
 - Version of the plugin API pushed to 103
 - Adapt for gcc 4.5.1 coming with OpenSUSE 11.4


Version 5.0.32:
===============
Bugfixes:
 - Fix pssh's behavior for interactive sessions
 - Fix race-conditions that might lock RDP's timer forever (#1077)
 - Don't try to read the executable, if there's no permission (#1058)
 - Allow plugin's initialize() method to fail (#1096)
 - Fix some minor memory-leaks (#1009, )

Enhancements:
 - Allow users to influence pinning via __PSI_CPUMAP (#1086)
 - Dynamical dropping of message within psid (#992)
 - psid now has a hook-facility; currently it support PSIDHOOK_NODE_UP
   and PSIDHOOK_NODE_DOWN
 - Implement logger_finalize() in order to allow dynamical loggers (#1010)

Additional changes:
 - Version of the plugin API pushed to 102.


Version 5.0.31:
===============
Bugfixes:
 - Remove limitations on length of arguments when spawning processes (#740).
 - psiadmin now accept range of the form last-first, too (#1014).
 - Include RDP-header in maximum message size for protocols (#459).
 - Fix crippled output of very long lines since 5.0.30.
 - Fix memory leak in partition handling (#794).
 - Catch possible segfaults within psid's logging.
 - Prevent psid from segfaulting, if PSI_TPP erroneously set to 0.
 - Don't crash psid, if client<->daemon protocol is messed up.

Enhancements:
 - Unload plugins before daemon shuts down (#562).
 - RDP statistics (mean-time to ACK, etc.).
 - psh: fix precedence of $RCMD, $AUTOCD and $MAXRCMD.
 - Nicer output of long lines with and without prefixes.
 - Better error-message from mpiexec, if spawning of service-process failed.
 - More detailed messages on late receives in psilogger.
 - Improve testing on failed initialization of loggers.
 - Initialize timer facility explicitely (#799).

Additional changes:
 - Remove extra debug in context of #442.


Version 5.0.30:
===============
Bugfixes:
 - Improve memory-handling when temporarily buffering messages (#689/jt:#2686).
 - Mark psiadmin's hex-output to be in hex (#612).
 - Improved error-messages, if PMI barrier timeout strikes (#827).
 - Improve logging with timestamps (#719).

Enhancements:
 - New psiadmin directive: echo (#632).
 - RLIMIT_NOFILE now configurable & propagated to remote processes
   (#792/jt:#2691).
 - Better handling of hanging file-systems while spawning processes (#879).
 - psid's environment might be changed during runtime (#815).
 - Enhanced plugin-interface within psid (#562). This is a pre-requisit for
   psmom and psaccount plugins.
 - Job's starttime is listed in psiadmin's 'list jobs' directive.

Additional changes:
 - Improved logging on flaws in psid's configuration file.
 - Add /opt/parastation/sbin to root's PATH (#893).


Version 5.0.29:
===============

Bugfixes:
 - psh name merging will not merge (#317).
 - psh's NameCompress create empty result (#318).
 - Performance enhancement in RDP: msgbufs put back into pool
      earlier (jt:#3239).
 - Performance enhancement in flow-control: Don't always wait
      for Sselect to time-out (jt:#3239).

Enhancements:
 - use selectors to handle clients' file-descriptors in psid.
 - allow to trigger Sselect() to start-over. Useful to enable modified
      fd-sets more quickly. Might help with jt:#3239.
 - allow to disable registered selectors temporarily.
 - enable stack protector, if supported (#796).

Additional changes:
 - less important RDP-messages suppressed per default. These might
      lead to bandwidth-problems on huge clusters due to created load.
 - psh now uses psnameexpand and psnamecompress from pscluster/bin/pstool
 - Obsolete NrofNodes removed from default configuration


Version 5.0.28:
===============

Bugfixes:
 - Various improvements in RDP protocol (#386).
 - Fix possible race-condition when resequencing RDP messages (#327).
    this might lead to the behavior described in #327.
 - Improved startup of psid on huge cluster with few active nodes.
 - psaccview: option --norcfile doesn't need a parameter
 - psaccview: don't display empty lines when using option --nospace

Enhancements:
 - Improved logging from RDP's state-machine.
 - psaccview: new option --last_days to show the last x days of accounting data.
 - psaccview: new option --timeout will stop parsing if the timeout is reached.
 - Allow service-tasks to explicitely request signals on children's end (#554).

Additional changes:
 - If core-dumps are enabled, psid does not catch SIGBUS any longer.
 - Extended accounting functionality moved into plugin.

#!/bin/sh
#
# Find a kernel module. Use heuristics to guess 
# the kernel config (on i386 only)
#
# Author: Jens Hauke <hauke@par-tec.com>
#
# $Id: findmodule,v 1.2 2003/04/15 08:19:50 hauke Exp $
#

MODULEDIR=${1-"."}
MODULE=${2-".info"}

if [ "${MODULE:0:1}" = "/" ]; then
    # absolut path
    if [ -f ${MODULE} ]; then
	echo ${MODULE}
	exit 0
    fi
fi

#relative path

cd ${MODULEDIR}

if [ -f ${MODULE} ]; then
    echo $(pwd)/${MODULE}
    exit 0
fi

# Search for the module

function config_smp()
{
    grep -q smp_num_cpus /proc/ksyms
}

function config_highmem()
{
    grep -q kmap_high /proc/ksyms
}

function config_pae()
{
    grep -q "^pae_pgd " /proc/slabinfo
}


if (config_smp) ; then
  CONFIG_SMP=1
else
  CONFIG_SMP=0
fi

if (config_highmem) ; then
  CONFIG_HIGHMEM=1
if (config_pae) ; then
  CONFIG_HIGHMEM4G=0
  CONFIG_HIGHMEM64G=1
  CONFIG_PAE=1
else
  CONFIG_HIGHMEM4G=1
  CONFIG_HIGHMEM64G=0
  CONFIG_PAE=0
fi
else
  CONFIG_HIGHMEM=0
  CONFIG_HIGHMEM4G=0
  CONFIG_HIGHMEM64G=0
  CONFIG_PAE=0
fi

UTS_RELEASE=$(uname -r)

MATCH=""
for info in */.info
do
    MODULE_UTS_RELEASE=""
    MODULE_CONFIG_HIGHMEM=""
    MODULE_CONFIG_PAE=""
    MODULE_CONFIG_SMP=""
    if [ -f $info -a -f $(dirname $info)/${MODULE} ]; then
      eval `cat $info|tr -d " "`
      if [ "$UTS_RELEASE"    = "$MODULE_UTS_RELEASE"    -a \
	   "$CONFIG_HIGHMEM" = "$MODULE_CONFIG_HIGHMEM" -a \
	   "$CONFIG_HIGHMEM64G" = "$MODULE_CONFIG_HIGHMEM64G"     -a \
	   "$CONFIG_SMP"     = "$MODULE_CONFIG_SMP"     ]; then
        MATCH=$(pwd)/$(dirname $info)/${MODULE}
	break
      fi
    fi
done

if [ "$MATCH" = "" ];then
    exit 1
else
    echo ${MATCH}
fi


#!/bin/sh
# 
# PSM Myrinet Device Driver for Parastation3
#
# Script to load/unload the module and configure the interface
#
# Author: Jens Hauke <hauke@par-tec.com>, Norbert Eicker <eicker@par-tec.com>
#
# $Id: ps_myrinet,v 1.3 2003/04/07 15:47:35 hauke Exp $
#

#checks
test ${PS_LIC?"missing env PS_LIC"}
test ${PS_ID?"missing env PS_ID"}
test ${PS_ROUTEFILE?"missing env PS_ROUTEFILE"}


#defaults
PS_INSTALLDIR=${PS_INSTALLDIR-"/opt/parastation"}
PS_MODULE=${PS_MODULE-"psm.o"}
PS_IPMODULE=${PS_IPMODULE-"mod_psn.o"}
PS_IPENABLED=${PS_IPENABLED-"0"}
PS_IPPREFIX=${PS_IPPREFIX-"192.168.48"}
PS_IPPREFIXLEN=${PS_IPPREFIXLEN-"20"}
PS_MODULEPATH=${PS_MODULEPATH-${PS_INSTALLDIR}/bin/modules}
PSCONFIG=${PS_INSTALLDIR}/bin/psconfig
PSCOUNTER=${PS_INSTALLDIR}/bin/pscounter

# PSN Network Device for Parastation3
PSNINOUT=${PS_INSTALLDIR}/config/psninout
FINDMOD="${PS_INSTALLDIR}/config/findmodule ${PS_MODULEPATH}"

if [ "$PS_ROUTEFILE" != "/" ]; then
    # no absolut path
    PS_ROUTEFILE=${PS_INSTALLDIR}/config/${PS_ROUTEFILE}
fi

INSMOD="insmod"
# If you saw a "kernel-module version mismatch", but are sure the module match
# to your kernel you can enable the following line:
# INSMOD="insmod -f"

RMMOD="rmmod"



load_module ()
{
    _MODULE=$1
    _ONERROR=${2-"1"}
    # Test if module is already loaded
    #
    _found=0
    for _mod in $(lsmod | tail +2 | colrm 20); do
	if [ $_mod == $(basename $_MODULE .o) ]; then
	    _found=1;
	fi
    done
    unset _mod

    if [ $_found == 0 ] ; then
	$INSMOD $_MODULE || { echo "Failed to configure subsystem: " $_MODULE ; exit $_ONERROR; }
    fi
}

case "$1" in
    start|stop)
	MODULE_PSM=$($FINDMOD $PS_MODULE)
	test -f $MODULE_PSM || { echo "Cant find module $PS_MODULE" ; exit 1;}
	if [ "$PS_IPENABLED" = "1" ]; then
	  MODULE_IP=$($FINDMOD $PS_IPMODULE) || echo "Cant find module $PS_IPMODULE"
	fi
	;;
esac

case "$1" in
    start)
	load_module ${MODULE_PSM}

	$PSCONFIG -key "$PS_LIC" || exit 2
	$PSCONFIG -id "$PS_ID" "$PS_ROUTEFILE" || exit 3

	test -z "$PS_SPS" || $PSCONFIG -p 0 "$PS_SPS"
	test -z "$PS_HNPEND" || $PSCONFIG -p 4 "$PS_HNPEND"
	test -z "$PS_ACKPEND" || $PSCONFIG -p 5 "$PS_ACKPEND"

	if [ "$PS_IPENABLED" = "1" ]; then
	    $PSNINOUT -m ${MODULE_IP} -n ${PS_IPPREFIX} -p ${PS_IPPREFIXLEN}
	fi
	
	;;

    stop)
	if [ "$PS_IPENABLED" = "1" ]; then
	    $PSNINOUT -m ${MODULE_IP} -o
	fi
	${RMMOD} $(basename ${MODULE_PSM} .o)
	;;

    statusheader)
	${PSCOUNTER} | head -1
	;;

    status)
	${PSCOUNTER} | tail -1
	;;

    *)
	echo "Usage: $0 {start|stop|statusheader|status}"
	exit 1
	;;
esac


exit 0

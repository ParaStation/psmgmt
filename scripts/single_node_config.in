#!/bin/bash
#
# ParaStation
#
# Copyright (C) 2023-2025 ParTec AG, Munich
#
# This file may be distributed under the terms of the Q Public License
# as defined in the file LICENSE.QPL included in the packaging of this
# file.
#

# psconfig command
PSCONFIG=psconfig

# Command line options
SHORT_OPTS=i:,n:,p:,h,v
OPTS=$(getopt -n single_node_config --options $SHORT_OPTS -- "$@")

# Variables and default values
NODE_HOSTNAME=$(hostname -s)
NODE_IP_ADDRESS=$(hostname -I | cut -d ' ' -f 1)
VERBOSE=0
PSID_PLUGINS=("psslurm")
DUMPDIR="@psconfigdumpsdir@"

# Check if psconfig exists
function psconfig_exists() {
    if ! command -v $PSCONFIG &> /dev/null
    then
        echo "Error: $PSCONFIG required but not found."
        exit 1
    fi
}

# Print help
function print_usage() {
    echo "Usage: single_node_config [OPTIONS]"
    echo ""
    echo "Configure psid for a single node (for development and testing only!)."
    echo "Depending on your installation of psconfig, this script must be run with sudo"
    echo ""
    echo "Options:"
    echo "-h              Print this usage info"
    echo "-v              Verbose output"
    echo "-n name         Configure the hostname (default: hostname -s)"
    echo "-i x.x.x.x      Configure the IP address (default: hostname -I | cut -d ' ' -f 1)"
    echo "-p plugin       Comma-separated list of plugins to be loaded by psid (default: psslurm)"
    echo "-D dumpdir      Directory where to find psconfig dumps"
}

# Parse command line arguments
function parse_arg() {

    eval set -- "$OPTS"

    while :
    do
        case "$1" in
            -h)
                print_usage
                exit 0
                ;;
            -v)
                VERBOSE=1
                shift;
                ;;
            -n)
                NODE_HOSTNAME="$2"
                shift 2
                ;;
            -i)
                NODE_IP_ADDRESS="$2"
                shift 2
                ;;
            -p)
                readarray -d ',' -t PSID_PLUGINS <<< "$2"
                shift 2
                ;;
            -D)
                DUMPDIR="$2"
                shift 2
                ;;
            --)
                shift
                break
                ;;
        esac
    done

    if [ $VERBOSE -eq 1 ]
    then
        echo "Configuring single-node psid with hostname=$NODE_HOSTNAME," \
             " IP=$NODE_IP_ADDRESS and plugins=$(IFS=, ; echo "${PSID_PLUGINS[*]}")"
    fi
}


# Configure psid for a single node
function psconfig_single_node() {
    #
    # Base database structure
    #
    # shellcheck source=/dev/null
    source "${DUMPDIR}/psmgmt-base.dump"
    #
    # Defaults objects
    #
    # shellcheck source=/dev/null
    source "${DUMPDIR}/psmgmt-defaults.dump"
    #
    # Object for this node
    #
    $PSCONFIG -- create "host:$NODE_HOSTNAME"
    $PSCONFIG -- setParents "host:$NODE_HOSTNAME" 'nodetype:compute' 'class:host'
    $PSCONFIG -D -- set "host:$NODE_HOSTNAME" 'Net.DevIPAddress' "$NODE_IP_ADDRESS"
    $PSCONFIG -D -- set "host:$NODE_HOSTNAME" 'NodeName' "$NODE_HOSTNAME"
    $PSCONFIG -D -- set "host:$NODE_HOSTNAME" 'Psid.NodeId' '0'
    #
    # Object "nodetype:compute"
    #
    $PSCONFIG -- create 'nodetype:compute'
    $PSCONFIG -- setParents 'nodetype:compute' 'class:nodetype'
    $PSCONFIG -D -- set 'nodetype:compute' 'PSConfigRsyncCommand' 'rsync --port=874'
    $PSCONFIG -D -- set 'nodetype:compute' 'PSConfigSyncSource' "$NODE_HOSTNAME::psconfig"
    $PSCONFIG -- setPointerList 'nodetype:compute' 'Psid.' 'psid:compute'
    $PSCONFIG -D -- set 'nodetype:compute' 'Psid.NetworkName' 'Net'
    #
    # Object "psid:compute"
    #
    $PSCONFIG -- create 'psid:compute'
    $PSCONFIG -- setParents 'psid:compute' 'class:psid'
    $PSCONFIG -D -- setList 'psid:compute' 'LoadPlugins' "${PSID_PLUGINS[@]}"
    #
    # Unlock database
    #
    eval "$($(which --skip-alias --skip-function $PSCONFIG) unlock)"
    #
    # dump the config for easier debugging
    if [ $VERBOSE -eq 1 ]
    then
        $PSCONFIG dump
    fi
}


################
# Script start #
################

parse_arg "$@"

psconfig_exists

psconfig_single_node

################
#  Script end  #
################

#
# Configuration file for ParaStation
# (C) 2003 ParTec AG Karlsruhe
# All rights reserved.
#
# $Id: parastation.conf,v 1.17 2004/05/25 11:27:29 eicker Exp $
#

#
# While the parser is *not* case-sensitive on keywords, names and
# values of environment variables (i.e. such defined within
# env(ironment)) and names and values within a hardware definition
# *are* case-sensitive.
#

#
# Where to find all the ParaStation stuff
# You have to declare this first (default /opt/parastation)
#
# InstallDir	/opt/parastation


#
# Hardware definitions
#


# Location of the ParaStation kernel-modules,
# relative to InstallDir.
# 

# env PS_MODULEPATH bin/modules/i686_Linux_2.4.20

#
# Myrinet configuration (if myrinet is available)
#
Hardware myrinet {
	# This one is called in order to start the hardware
	startscript	"config/ps_myrinet start"

	# This one is called in order to stop the hardware
	stopscript	"config/ps_myrinet stop"

	# This one is called in order to set special parameters
	setupscript	"bin/psconfig"

	# This one is called in order to get the header line of the
	# 'status counter' directive's output within the ParaStation
	# administration tool psiadmin.
	headerscript	"config/ps_myrinet statusheader"

	# This one is called in order to get a line of the 'status counter'
	# directive's output within the ParaStation administration tool
	#  psiadmin.
	statusscript	"config/ps_myrinet status"

	# Myrinet kernel-module (default psm.o)
	# PS_MODULE	psm.o

	# Myrinet routing file
	PS_ROUTEFILE	M3E16.route

	# Remove the following lines, if you dont want IP over myrinet
	PS_IPENABLED	1

	# The kernel-module for IP-over-Myrinet-support (default mod_psn.o)
	# PS_IPMODULE	mod_psn.o

	# The prefix of the Myrinet IP-addresses in dot-notation.
	# Less than 4 numbers are allowed. The address will be filled
	# up with 0's
	PS_IPPREFIX	192.168.48
	
	# The length of the valid part of IPprefix in bit
	PS_IPPREFIXLEN	20

	# Define the psm.o module's SPS parameter
	# PS_SPS	2000
	# Define the psm.o module's HNPEND parameter
	# PS_HNPEND	2
	# Define the psm.o module's ACKPEND parameter
	# PS_ACKPEND	1
}    

#
# Ethernet configuration
#
Hardware ethernet {
	startscript "config/ps_ethernet start"
	stopscript  "config/ps_ethernet stop"
	headerscript "config/ps_ethernet statusheader"
	statusscript "config/ps_ethernet status"
}

#
# ParaStation 4 base driver (ignored within ParaStation 3/FE)
#
Hardware p4sock {
	# IP-ranges for the TCP-Bypass
	# PS_TCP      "192.168.1.2-192.168.1.32 192.168.202.55"
	startscript "config/ps_p4sock start"
	stopscript  "config/ps_p4sock stop"
	headerscript "config/ps_p4sock statusheader"
	statusscript "config/ps_p4sock status"
}

#
# ParaStation / GM driver (ignored within ParaStation 3/FE)
#
Hardware gm {
	GM_INSTALLDIR /opt/gm

	startscript "config/ps_gm start"
	stopscript  "config/ps_gm stop"
	headerscript "config/ps_gm statusheader"
	statusscript "config/ps_gm status"
}

#
# ParaStation / InfiniBand driver
#
Hardware ib {
	startscript "config/ps_ib start"
	stopscript  "config/ps_ib stop"
	headerscript "config/ps_ib statusheader"
	statusscript "config/ps_ib status"
}


#
# Number of connected Stations (including front-end)
# You have to declare this before any Nodes
#
NrOfNodes	9

#
# Default HW-Type. All nodes have this HW (unless otherwise stated).
# Possible values are names from the Hardware section and 'none'.
# This has to be declared before any Node
#
# You can configure single HW with lines like:
# HWType myrinet
#
HWType	{ myrinet ethernet gm p4sock }

#
# (Dis-)Allow to start parallel jobs from all nodes (unless otherwise stated).
#
starter	yes

#
# (Dis-)Allow to run parallel jobs on all nodes (unless otherwise stated).
#
runJobs	yes

#
# List of all nodes
#
Nodes {
# Node 0 (which is the machine with hostname 'node-0') uses the default values
# for HWType, starter and runJobs which where declared above.
	node-0		0
	node-1		1
	node-2		2
# Don't allow the start of parallel jobs from node 3 (on 'node-3').
	node-3		3 starter no
	node-4		4
# Node 5 (on 'node-5') has only ethernet communication hardware.
	node-5		5 hwtype { ethernet }
	node-6		6
	node-7		7
# Node 8 (on frontend) has no communication-hardware.
# Starting of parallel jobs is allowed but no jobs run here.
	frontend	8 HWtype none runJobs no starter yes
}

#
# The license-file
# This may be a absolute or relative path. Relative path are looked up
# relative to InstallDir/config and InstallDir in this order. Furthermore
# the directory where the config-file resides (which is /etc by default,
# but may be overwritten with psid's and psld's -f option) is investigated.
#
LicenseFile   license

#
# Configuration of the ParaStation daemon process (psid)
#
#
# Timeout of the central select() of the daemon
#
# SelectTime		2
#
#
# Daemons are declared dead if this amount of MCast pings are missing
#
# DeadInterval	10
#
# The initial logging level of the daemon
#
# LogLevel	0
#
# The destination of the logging output of the daemon. Possible values are:
# LOG_DAEMON, LOG_KERN, LOG_LOCAL[0-7]
#
# LogDestination	LOG_DAEMON
#
# Use MCast for status control. The default is not to use MCast.
#
# UseMCast
#
# The MCast-group to use within the MCast facility of the daemon
#
# MCastGroup	237
#
# The port to use within the MCast facility of the daemon
#
# MCastPort	1889
#
# The port to use within the RDP facility of the daemon
#
# RDPPort	886
#
# Should resources of suspended parallel application be freed
# temporarily? The default is not to free resources. The following
# keyword is used to get them freed.
# Furthermore you can modify the behaviour during run-time via psiadmin's
# 'set freeOnSuspend' directive.
#
# freeOnSuspend
#
# Should applications linked against version of ParaStation prior than
# 4.1 be handled gracefully? The default is to ignore the resources
# occupated by old binaries. This might lead to unwanted overbooking
# of resources. The following keyword is used to handle them
# correctly.  Unfortunately the correct handling of old binaries
# interferes with the temporarily freeing of suspended job's resources.
#
# handleOldBins

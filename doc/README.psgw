Copyright (C) 2019 ParTec Cluster Competence Center GmbH, Munich

Please send bug reports, questions and suggestions to <support@par-tec.com>

Slurm Integration of the ParaStation Gateway Daemon Startup

Requirements

- enabled slurmctld prologue
- minimal pscom version 5.2.7-1_111 with psgwd support
- minimal psmgmt version 5.1.17 with psgw support
- python cluster shell module

Notes

This guide describes the installation and configuration of the PoC
(proof of concept) implementation of the gateway daemon startup. A
future release version might require different / additional steps.

The examples in this document using the default psmgmt installation
path /opt/parastation. For non standard installations please remember
to change the path accordingly.

Global psid configuration

The available hardware types configuration of psid has to be extended
by the options "gateway" and "booster".

Psid.AvailableHardwareTypes = ["ethernet", "accounter", "openib", "ipath", "gateway", "booster"]

All gateway nodes have to be assigned to the hardware type "gateway"

Psid.HardwareTypes = ["openib", "gateway"]

All booster nodes have to be assigned to the hardware type "booster"

Psid.HardwareTypes = ["openib", "booster"]

Nodes which don't have a hardware type "gateway" or "booster" will be
categorized as "cluster" nodes.

Configuration of the head nodes

The script psgw_error is called by the mother superior if not enough
gateway resources are available or other fatal errors occurred during
startup.  The purpose of the psgw_error script is to re-queued batch
jobs and set the eligible time to ten minutes in the future.

The script has to be installed on all head nodes (nodes executing the
slurmcltd prologue)

The default location of psgw_error script is

/var/spool/parastation/scripts/psgw_error

For an example of a psgw_error script see:

/opt/parastation/share/doc/psmgmt-$version/psgw_error.example

Configuration of the compute nodes

The psid plugin psgw has to be loaded on all compute nodes

Psid.LoadPlugins = ["pspmi", "psslurm", "psgw"]

The PoC requires a mandatory configuration change of the psgw plugin.
The number of CPU cores of the gateway nodes has to be set in
/opt/parastation/plugins/psgw.conf:

# Set to max TPP of gateway nodes
GATEWAY_TPP = 16

For a detailed list of supported configuration options of the psgw
plugin see:

/opt/parastation/share/doc/psmgmt-$version/psgw.conf.template



Configuration of the gateway nodes

The psid plugin psexec and pelogue has to be loaded on all gateway
nodes:

Psid.LoadPlugins = ["psexec", "pelogue"]

Ensure that psid will allow to start processes on the gateway nodes.
This can be done using the psiadmin commands "show starter" and "show runjobs".

Global Slurm configuration

In the file /etc/slurm/plugstack.conf the psgw spank plugin has to be
loaded.

# Load ParaStation gateway plugin
required /opt/parastation/lib64/slurm/psgw_spank.so

The gateway plugin will extend the submit commands salloc/srun/sbatch
with options to request additional gateway resources.
The following options are currently supported:

--gw_file=path          Path to the gateway routing file
--gw_plugin=string      Name of the route plugin
--gw_num=number         Number of gateway nodes
--gw_env=string         Additional gateway environment variables
--gw_cleanup            Automatically cleanup the route file
--gw_binary=path        debug psgwd

These options will be listed in the section "Options provided by
plugins" in the help output of the commands salloc/srun/sbatch. Refer
to the psgw user guide for a more detailed description.

Routing details

In the slurmctld prologue phase the psgw plugin requests additional
gateway nodes from the psid master. If the request is successful a
prologue will be executed on the gateway nodes and the psgwd is
started. The listen address and port on which the psgwd is waiting for
requests is forwarded to the route script. The scripts to generate the
routing file and the route plugins can be found in

/opt/parastation/libexec/psgw/

The route scripts are part of the psmgmt RPM package.  There is no
administrative action required.

The route script psroute.py called by the psmgmt psgw plugin will
generate the routing file when the slurmctld prologue is executed. An
environment variable pointing to the routing file will be forwarded by
psslurm to every compute process of the allocation. After allocation
is revoke the routing file will be automatically removed if the user
specified the --gw_cleanup option.

A routing file example:

192.168.12.77:40158 cluster015 booster003
192.168.12.77:40158 cluster016 booster003
192.168.12.78:40889 cluster015 booster010
192.168.12.78:40889 cluster016 booster010

The routing file above shows that the cluster nodes cluster[015-016]
use the gateway with address 192.168.12.77 and port 40158 to talk to
the booster003 node. For the booster node booster010 the gateway with
address 192.168.12.78 and port 40889 is used.

To verify if the communication is routed using the gateway set the
pscom debug level equal to 3 or higher.

export PSP_DEBUG=3

A example connection using the gateway:

<PSP:r0000001:DISCONNECT (192.168.12.42,30714,0xb,r0000001)
	to (192.168.12.31,3141,0xb,r0000005) via gw>

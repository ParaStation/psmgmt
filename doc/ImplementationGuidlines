Implementation Guidlines
Type definitions:
   [ModuleAbstration][_][Description]_[T|t]
      ModuleAbstration is a short description of the origin where 
                       the data type is mainly used. 
                       E.g. PSHAL for ParaStation Hardware Abstraction
                            Layer
      _                the underscore is used, if the data type is only
                       used inside the ModuleAbstraction. Datatype
                       visible to other modules are without the _
      Description      is an identification of the purpose of the
                       new type.
                       E.g. Frag for fragment
      T                is used for data types which still need struct
                       or union to declare variables
      t                is used for data type which declare variables
                       without a struct or union.
  Type definitions should usually be used in the following manner:
  typedef struct PSHALMyDataType_T {
         ...whatever to declare...
  }PSHALMyDataType_t;
                       
Function definitions
   [ModuleAbstration][_][Description]
      ModuleAbstration is a short description of the origin where 
                       the function is implemented. 
                       E.g. PSHAL for ParaStation Hardware Abstraction
                            Layer
      _                the underscore is used, if the function is only
                       used inside the ModuleAbstraction. Functions
                       visible to other modules are without the _
      Description      is an identification of the purpose of the
                       new function. The initial letters of the
                       words in the description are capital
                       E.g. FragFree() for a function which frees 
                            a fragment
  














